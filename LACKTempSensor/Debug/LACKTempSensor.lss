
LACKTempSensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  000013b4  00001428  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013b4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00001450  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000014ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  000014ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000fd1  00000000  00000000  0000160c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a57  00000000  00000000  000025dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008ac  00000000  00000000  00003034  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001ec  00000000  00000000  000038e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000055f  00000000  00000000  00003acc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000540  00000000  00000000  0000402b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  0000456b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
       4:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
       8:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
       c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      10:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      14:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      18:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      1c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      20:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      24:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      28:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      2c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      30:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      34:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      38:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      3c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      40:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      44:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      48:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      4c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      50:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      54:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      58:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      5c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      60:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      64:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 40       	sbci	r16, 0x00	; 0
      6a:	7a 10       	cpse	r7, r10
      6c:	f3 5a       	subi	r31, 0xA3	; 163
      6e:	00 a0       	ldd	r0, Z+32	; 0x20
      70:	72 4e       	sbci	r23, 0xE2	; 226
      72:	18 09       	sbc	r17, r8
      74:	00 10       	cpse	r0, r0
      76:	a5 d4       	rcall	.+2378   	; 0x9c2 <vfprintf+0x6>
      78:	e8 00       	.word	0x00e8	; ????
      7a:	00 e8       	ldi	r16, 0x80	; 128
      7c:	76 48       	sbci	r23, 0x86	; 134
      7e:	17 00       	.word	0x0017	; ????
      80:	00 e4       	ldi	r16, 0x40	; 64
      82:	0b 54       	subi	r16, 0x4B	; 75
      84:	02 00       	.word	0x0002	; ????
      86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
      88:	9a 3b       	cpi	r25, 0xBA	; 186
      8a:	00 00       	nop
      8c:	00 e1       	ldi	r16, 0x10	; 16
      8e:	f5 05       	cpc	r31, r5
      90:	00 00       	nop
      92:	80 96       	adiw	r24, 0x20	; 32
      94:	98 00       	.word	0x0098	; ????
      96:	00 00       	nop
      98:	40 42       	sbci	r20, 0x20	; 32
      9a:	0f 00       	.word	0x000f	; ????
      9c:	00 00       	nop
      9e:	a0 86       	std	Z+8, r10	; 0x08
      a0:	01 00       	.word	0x0001	; ????
      a2:	00 00       	nop
      a4:	10 27       	eor	r17, r16
      a6:	00 00       	nop
      a8:	00 00       	nop
      aa:	e8 03       	fmulsu	r22, r16
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	64 00       	.word	0x0064	; ????
      b2:	00 00       	nop
      b4:	00 00       	nop
      b6:	0a 00       	.word	0x000a	; ????
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	01 00       	.word	0x0001	; ????
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	2c 76       	andi	r18, 0x6C	; 108
      c4:	d8 88       	ldd	r13, Y+16	; 0x10
      c6:	dc 67       	ori	r29, 0x7C	; 124
      c8:	4f 08       	sbc	r4, r15
      ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
      cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
      ce:	ae 59       	subi	r26, 0x9E	; 158
      d0:	e1 b1       	in	r30, 0x01	; 1
      d2:	b7 96       	adiw	r30, 0x27	; 39
      d4:	e5 e3       	ldi	r30, 0x35	; 53
      d6:	e4 53       	subi	r30, 0x34	; 52
      d8:	c6 3a       	cpi	r28, 0xA6	; 166
      da:	e6 51       	subi	r30, 0x16	; 22
      dc:	99 76       	andi	r25, 0x69	; 105
      de:	96 e8       	ldi	r25, 0x86	; 134
      e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <__fixunssfsi+0x2c>
      e2:	84 26       	eor	r8, r20
      e4:	eb 89       	ldd	r30, Y+19	; 0x13
      e6:	8c 9b       	sbis	0x11, 4	; 17
      e8:	62 ed       	ldi	r22, 0xD2	; 210
      ea:	40 7c       	andi	r20, 0xC0	; 192
      ec:	6f fc       	.word	0xfc6f	; ????
      ee:	ef bc       	out	0x2f, r14	; 47
      f0:	9c 9f       	mul	r25, r28
      f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
      f4:	ba a5       	ldd	r27, Y+42	; 0x2a
      f6:	6f a5       	ldd	r22, Y+47	; 0x2f
      f8:	f4 90       	lpm	r15, Z
      fa:	05 5a       	subi	r16, 0xA5	; 165
      fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
      fe:	5c 93       	st	X, r21
     100:	6b 6c       	ori	r22, 0xCB	; 203
     102:	f9 67       	ori	r31, 0x79	; 121
     104:	6d c1       	rjmp	.+730    	; 0x3e0 <MAX7219_Display4Digit+0x46>
     106:	1b fc       	.word	0xfc1b	; ????
     108:	e0 e4       	ldi	r30, 0x40	; 64
     10a:	0d 47       	sbci	r16, 0x7D	; 125
     10c:	fe f5       	brtc	.+126    	; 0x18c <__bad_interrupt>
     10e:	20 e6       	ldi	r18, 0x60	; 96
     110:	b5 00       	.word	0x00b5	; ????
     112:	d0 ed       	ldi	r29, 0xD0	; 208
     114:	90 2e       	mov	r9, r16
     116:	03 00       	.word	0x0003	; ????
     118:	94 35       	cpi	r25, 0x54	; 84
     11a:	77 05       	cpc	r23, r7
     11c:	00 80       	ld	r0, Z
     11e:	84 1e       	adc	r8, r20
     120:	08 00       	.word	0x0008	; ????
     122:	00 20       	and	r0, r0
     124:	4e 0a       	sbc	r4, r30
     126:	00 00       	nop
     128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
     12a:	0c 33       	cpi	r16, 0x3C	; 60
     12c:	33 33       	cpi	r19, 0x33	; 51
     12e:	33 0f       	add	r19, r19
     130:	98 6e       	ori	r25, 0xE8	; 232
     132:	12 83       	std	Z+2, r17	; 0x02
     134:	11 41       	sbci	r17, 0x11	; 17
     136:	ef 8d       	ldd	r30, Y+31	; 0x1f
     138:	21 14       	cp	r2, r1
     13a:	89 3b       	cpi	r24, 0xB9	; 185
     13c:	e6 55       	subi	r30, 0x56	; 86
     13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
     140:	fe e6       	ldi	r31, 0x6E	; 110
     142:	db 18       	sub	r13, r11
     144:	d1 84       	ldd	r13, Z+9	; 0x09
     146:	4b 38       	cpi	r20, 0x8B	; 139
     148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
     14a:	7c 1d       	adc	r23, r12
     14c:	90 1d       	adc	r25, r0
     14e:	a4 bb       	out	0x14, r26	; 20
     150:	e4 24       	eor	r14, r4
     152:	20 32       	cpi	r18, 0x20	; 32
     154:	84 72       	andi	r24, 0x24	; 36
     156:	5e 22       	and	r5, r30
     158:	81 00       	.word	0x0081	; ????
     15a:	c9 f1       	breq	.+114    	; 0x1ce <LM335_Read+0x12>
     15c:	24 ec       	ldi	r18, 0xC4	; 196
     15e:	a1 e5       	ldi	r26, 0x51	; 81
     160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
     162:	11 24       	eor	r1, r1
     164:	1f be       	out	0x3f, r1	; 63
     166:	cf ef       	ldi	r28, 0xFF	; 255
     168:	d8 e0       	ldi	r29, 0x08	; 8
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
     16e:	11 e0       	ldi	r17, 0x01	; 1
     170:	a0 e0       	ldi	r26, 0x00	; 0
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	e4 eb       	ldi	r30, 0xB4	; 180
     176:	f3 e1       	ldi	r31, 0x13	; 19
     178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
     17a:	05 90       	lpm	r0, Z+
     17c:	0d 92       	st	X+, r0
     17e:	a8 32       	cpi	r26, 0x28	; 40
     180:	b1 07       	cpc	r27, r17
     182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>
     184:	0e 94 3f 01 	call	0x27e	; 0x27e <main>
     188:	0c 94 d8 09 	jmp	0x13b0	; 0x13b0 <_exit>

0000018c <__bad_interrupt>:
     18c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000190 <ADC_Init>:
/******************** Functions **************************/

//Initialize the ADC
void ADC_Init(){
	//Use VCC for the analog reference voltage, right justify result, only use ADC0 for input
	ADMUX = (0<<REFS1)|(0<<REFS0)|(0<<ADLAR)|(0<<MUX3)|(0<<MUX2)|(0<<MUX1)|(0<<MUX0);
     190:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	//Enable ADC, use for single conversion mode, clk/8 prescaler
	ADCSRA = (1<<ADEN)|(0<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
     194:	83 e8       	ldi	r24, 0x83	; 131
     196:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     19a:	08 95       	ret

0000019c <ADC_Value>:
}

//Reads the value from the ADC
uint16_t ADC_Value(){
	//Pass bit in to get request measurement
	ADCSRA |= (1<<ADSC);
     19c:	ea e7       	ldi	r30, 0x7A	; 122
     19e:	f0 e0       	ldi	r31, 0x00	; 0
     1a0:	80 81       	ld	r24, Z
     1a2:	80 64       	ori	r24, 0x40	; 64
     1a4:	80 83       	st	Z, r24
	//Wait for conversion
	while(BIT_SET(ADCSRA, ADSC));
     1a6:	80 81       	ld	r24, Z
     1a8:	86 fd       	sbrc	r24, 6
     1aa:	fd cf       	rjmp	.-6      	; 0x1a6 <ADC_Value+0xa>
	//Return the 10-bit right justified result
	return ADC;
     1ac:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     1b0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
}
     1b4:	08 95       	ret

000001b6 <LM335_Init>:
/******************** Functions **************************/

//Initialize ADC that this sensor relies on
void LM335_Init(){
	//Initialize the output 
	ADC_Init();
     1b6:	0e 94 c8 00 	call	0x190	; 0x190 <ADC_Init>
     1ba:	08 95       	ret

000001bc <LM335_Read>:
	return; //Return to call point
}

//Collect the current temp from the sensor, scale appropriately and return in specified units
float LM335_Read(enum tempunits units){
     1bc:	cf 93       	push	r28
     1be:	c8 2f       	mov	r28, r24
	float value;
	//Get the current value from the 10-bit ADC
	uint16_t raw_value = ADC_Value();
     1c0:	0e 94 ce 00 	call	0x19c	; 0x19c <ADC_Value>
	//Return in the specified units
	switch(units){
     1c4:	c1 30       	cpi	r28, 0x01	; 1
     1c6:	a1 f0       	breq	.+40     	; 0x1f0 <LM335_Read+0x34>
     1c8:	18 f0       	brcs	.+6      	; 0x1d0 <LM335_Read+0x14>
     1ca:	c2 30       	cpi	r28, 0x02	; 2
     1cc:	39 f1       	breq	.+78     	; 0x21c <LM335_Read+0x60>
     1ce:	48 c0       	rjmp	.+144    	; 0x260 <LM335_Read+0xa4>
		case KELVIN:
			value = raw_value * 0.4882;
     1d0:	bc 01       	movw	r22, r24
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__floatunsisf>
     1da:	2a e5       	ldi	r18, 0x5A	; 90
     1dc:	35 ef       	ldi	r19, 0xF5	; 245
     1de:	49 ef       	ldi	r20, 0xF9	; 249
     1e0:	5e e3       	ldi	r21, 0x3E	; 62
     1e2:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__mulsf3>
			return value;
     1e6:	56 2f       	mov	r21, r22
     1e8:	47 2f       	mov	r20, r23
     1ea:	38 2f       	mov	r19, r24
     1ec:	29 2f       	mov	r18, r25
     1ee:	41 c0       	rjmp	.+130    	; 0x272 <LM335_Read+0xb6>
		break;
		case CELSUIS:
			value = (raw_value * 0.4882) + 273.15;
     1f0:	bc 01       	movw	r22, r24
     1f2:	80 e0       	ldi	r24, 0x00	; 0
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__floatunsisf>
     1fa:	2a e5       	ldi	r18, 0x5A	; 90
     1fc:	35 ef       	ldi	r19, 0xF5	; 245
     1fe:	49 ef       	ldi	r20, 0xF9	; 249
     200:	5e e3       	ldi	r21, 0x3E	; 62
     202:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__mulsf3>
     206:	23 e3       	ldi	r18, 0x33	; 51
     208:	33 e9       	ldi	r19, 0x93	; 147
     20a:	48 e8       	ldi	r20, 0x88	; 136
     20c:	53 e4       	ldi	r21, 0x43	; 67
     20e:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__addsf3>
			return value;
     212:	56 2f       	mov	r21, r22
     214:	47 2f       	mov	r20, r23
     216:	38 2f       	mov	r19, r24
     218:	29 2f       	mov	r18, r25
     21a:	2b c0       	rjmp	.+86     	; 0x272 <LM335_Read+0xb6>
		break;
		case FAHRENHEIT:
			value = (((raw_value * 0.4882) + 273.15) * 1.8) + 32;
     21c:	bc 01       	movw	r22, r24
     21e:	80 e0       	ldi	r24, 0x00	; 0
     220:	90 e0       	ldi	r25, 0x00	; 0
     222:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__floatunsisf>
     226:	2a e5       	ldi	r18, 0x5A	; 90
     228:	35 ef       	ldi	r19, 0xF5	; 245
     22a:	49 ef       	ldi	r20, 0xF9	; 249
     22c:	5e e3       	ldi	r21, 0x3E	; 62
     22e:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__mulsf3>
     232:	23 e3       	ldi	r18, 0x33	; 51
     234:	33 e9       	ldi	r19, 0x93	; 147
     236:	48 e8       	ldi	r20, 0x88	; 136
     238:	53 e4       	ldi	r21, 0x43	; 67
     23a:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__addsf3>
     23e:	26 e6       	ldi	r18, 0x66	; 102
     240:	36 e6       	ldi	r19, 0x66	; 102
     242:	46 ee       	ldi	r20, 0xE6	; 230
     244:	5f e3       	ldi	r21, 0x3F	; 63
     246:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__mulsf3>
     24a:	20 e0       	ldi	r18, 0x00	; 0
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	40 e0       	ldi	r20, 0x00	; 0
     250:	52 e4       	ldi	r21, 0x42	; 66
     252:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__addsf3>
			return value;
     256:	56 2f       	mov	r21, r22
     258:	47 2f       	mov	r20, r23
     25a:	38 2f       	mov	r19, r24
     25c:	29 2f       	mov	r18, r25
     25e:	09 c0       	rjmp	.+18     	; 0x272 <LM335_Read+0xb6>
		break;
	}
	//Invalid enum passed, return raw_adc value
	return (float)raw_value;
     260:	bc 01       	movw	r22, r24
     262:	80 e0       	ldi	r24, 0x00	; 0
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__floatunsisf>
     26a:	56 2f       	mov	r21, r22
     26c:	47 2f       	mov	r20, r23
     26e:	38 2f       	mov	r19, r24
     270:	29 2f       	mov	r18, r25
}
     272:	65 2f       	mov	r22, r21
     274:	74 2f       	mov	r23, r20
     276:	83 2f       	mov	r24, r19
     278:	92 2f       	mov	r25, r18
     27a:	cf 91       	pop	r28
     27c:	08 95       	ret

0000027e <main>:
/******************** Interrupt Service Routines *********/


/******************** Main *******************************/
int main(void)
{
     27e:	cf 93       	push	r28
     280:	df 93       	push	r29
     282:	cd b7       	in	r28, 0x3d	; 61
     284:	de b7       	in	r29, 0x3e	; 62
     286:	6e 97       	sbiw	r28, 0x1e	; 30
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	f8 94       	cli
     28c:	de bf       	out	0x3e, r29	; 62
     28e:	0f be       	out	0x3f, r0	; 63
     290:	cd bf       	out	0x3d, r28	; 61
	
	//DEBUG output string buffer
	char buffer[20], float_[10];;
	
	//Debugging LED
	DDRB |= (1<<PB5);
     292:	25 9a       	sbi	0x04, 5	; 4
	PORTB |= (0<<PB5);
     294:	85 b1       	in	r24, 0x05	; 5
     296:	85 b9       	out	0x05, r24	; 5
	
	/* Initialize the LM335 */
	LM335_Init();
     298:	0e 94 db 00 	call	0x1b6	; 0x1b6 <LM335_Init>
	
	/* Initialize the MAX7219 to control the 4-digit 7-segment display */
	MAX7219_Init();
     29c:	0e 94 ad 01 	call	0x35a	; 0x35a <MAX7219_Init>
	
	/* Initialize the USART debugging output */
	USART_Init(9600);
     2a0:	80 e8       	ldi	r24, 0x80	; 128
     2a2:	95 e2       	ldi	r25, 0x25	; 37
     2a4:	0e 94 8d 02 	call	0x51a	; 0x51a <USART_Init>
	
	//Check Serial is working
	USART_WriteString("Texas Instrument's LM335\n\r");
     2a8:	80 e0       	ldi	r24, 0x00	; 0
     2aa:	91 e0       	ldi	r25, 0x01	; 1
     2ac:	0e 94 c5 02 	call	0x58a	; 0x58a <USART_WriteString>
	while (1)
	{
		//Get the current temp
		temperature = LM335_Read(CELSUIS);
		//DEBUG Output the temp to the console
		dtostrf(temperature, 3, 2, float_);
     2b0:	7e 01       	movw	r14, r28
     2b2:	25 e1       	ldi	r18, 0x15	; 21
     2b4:	e2 0e       	add	r14, r18
     2b6:	f1 1c       	adc	r15, r1
		sprintf(buffer,"Temp: %s C\n\r",float_);
     2b8:	0f 2e       	mov	r0, r31
     2ba:	fb e1       	ldi	r31, 0x1B	; 27
     2bc:	af 2e       	mov	r10, r31
     2be:	f1 e0       	ldi	r31, 0x01	; 1
     2c0:	bf 2e       	mov	r11, r31
     2c2:	f0 2d       	mov	r31, r0
     2c4:	ce 01       	movw	r24, r28
     2c6:	01 96       	adiw	r24, 0x01	; 1
     2c8:	6c 01       	movw	r12, r24
	
	/* State machine loop */
	while (1)
	{
		//Get the current temp
		temperature = LM335_Read(CELSUIS);
     2ca:	81 e0       	ldi	r24, 0x01	; 1
     2cc:	0e 94 de 00 	call	0x1bc	; 0x1bc <LM335_Read>
     2d0:	2b 01       	movw	r4, r22
     2d2:	3c 01       	movw	r6, r24
		//DEBUG Output the temp to the console
		dtostrf(temperature, 3, 2, float_);
     2d4:	87 01       	movw	r16, r14
     2d6:	22 e0       	ldi	r18, 0x02	; 2
     2d8:	43 e0       	ldi	r20, 0x03	; 3
     2da:	0e 94 9c 04 	call	0x938	; 0x938 <dtostrf>
		sprintf(buffer,"Temp: %s C\n\r",float_);
     2de:	ff 92       	push	r15
     2e0:	ef 92       	push	r14
     2e2:	bf 92       	push	r11
     2e4:	af 92       	push	r10
     2e6:	df 92       	push	r13
     2e8:	cf 92       	push	r12
     2ea:	0e 94 bc 04 	call	0x978	; 0x978 <sprintf>
		USART_WriteString(buffer);
     2ee:	c6 01       	movw	r24, r12
     2f0:	0e 94 c5 02 	call	0x58a	; 0x58a <USART_WriteString>
		//Output the number to the seven segment display rounded to the nearest tens place
		//Push the first decimal up one position so it will display
		display_temp = (uint16_t)temperature*10;
		MAX7219_Display4Digit(display_temp);
     2f4:	c3 01       	movw	r24, r6
     2f6:	b2 01       	movw	r22, r4
     2f8:	0e 94 41 03 	call	0x682	; 0x682 <__fixunssfsi>
     2fc:	9b 01       	movw	r18, r22
     2fe:	22 0f       	add	r18, r18
     300:	33 1f       	adc	r19, r19
     302:	cb 01       	movw	r24, r22
     304:	88 0f       	add	r24, r24
     306:	99 1f       	adc	r25, r25
     308:	88 0f       	add	r24, r24
     30a:	99 1f       	adc	r25, r25
     30c:	88 0f       	add	r24, r24
     30e:	99 1f       	adc	r25, r25
     310:	82 0f       	add	r24, r18
     312:	93 1f       	adc	r25, r19
     314:	0e 94 cd 01 	call	0x39a	; 0x39a <MAX7219_Display4Digit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     318:	9f ef       	ldi	r25, 0xFF	; 255
     31a:	27 ea       	ldi	r18, 0xA7	; 167
     31c:	81 e6       	ldi	r24, 0x61	; 97
     31e:	91 50       	subi	r25, 0x01	; 1
     320:	20 40       	sbci	r18, 0x00	; 0
     322:	80 40       	sbci	r24, 0x00	; 0
     324:	e1 f7       	brne	.-8      	; 0x31e <main+0xa0>
     326:	00 c0       	rjmp	.+0      	; 0x328 <main+0xaa>
     328:	00 00       	nop
     32a:	0f 90       	pop	r0
     32c:	0f 90       	pop	r0
     32e:	0f 90       	pop	r0
     330:	0f 90       	pop	r0
     332:	0f 90       	pop	r0
     334:	0f 90       	pop	r0
     336:	c9 cf       	rjmp	.-110    	; 0x2ca <main+0x4c>

00000338 <MAX7219_Write>:
	MAX7219_Write(MAX7219_MODE_POWER, ON);
	return; //Return to call point
}

//Collect the current temp from the sensor, scale appropriately and return in specified units
void MAX7219_Write(uint8_t reg, uint8_t data){
     338:	cf 93       	push	r28
     33a:	df 93       	push	r29
     33c:	d8 2f       	mov	r29, r24
     33e:	c6 2f       	mov	r28, r22
	//Enable the SPI line
	SPI_Enable();
     340:	0e 94 83 02 	call	0x506	; 0x506 <SPI_Enable>
	//Send the register to write to
	SPI_Transfer(reg);
     344:	8d 2f       	mov	r24, r29
     346:	0e 94 87 02 	call	0x50e	; 0x50e <SPI_Transfer>
	//Send the data to put in the register
	SPI_Transfer(data);
     34a:	8c 2f       	mov	r24, r28
     34c:	0e 94 87 02 	call	0x50e	; 0x50e <SPI_Transfer>
	//Disable the SPI line
	SPI_Disable();
     350:	0e 94 85 02 	call	0x50a	; 0x50a <SPI_Disable>
	return;
}
     354:	df 91       	pop	r29
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <MAX7219_Init>:
/******************** Functions **************************/

//Initialize Serial Communication and driver settings
void MAX7219_Init(){
	//Initialize the serial comms
	SPI_Init();
     35a:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <SPI_Init>
	//Decode mode to "Font Code-B"
	MAX7219_Write(MAX7219_MODE_DECODE, 0xFF);
     35e:	6f ef       	ldi	r22, 0xFF	; 255
     360:	89 e0       	ldi	r24, 0x09	; 9
     362:	0e 94 9c 01 	call	0x338	; 0x338 <MAX7219_Write>
	//Scan limit runs from 0. Set scan to 4-1 to cover the 4 digits
	MAX7219_Write(MAX7219_MODE_SCAN_LIMIT, 0x03);
     366:	63 e0       	ldi	r22, 0x03	; 3
     368:	8b e0       	ldi	r24, 0x0B	; 11
     36a:	0e 94 9c 01 	call	0x338	; 0x338 <MAX7219_Write>
	//LED Intensity to 8
	MAX7219_Write(MAX7219_MODE_INTENSITY, 0x08);
     36e:	68 e0       	ldi	r22, 0x08	; 8
     370:	8a e0       	ldi	r24, 0x0A	; 10
     372:	0e 94 9c 01 	call	0x338	; 0x338 <MAX7219_Write>
	//Power on the output display
	MAX7219_Write(MAX7219_MODE_POWER, ON);
     376:	61 e0       	ldi	r22, 0x01	; 1
     378:	8c e0       	ldi	r24, 0x0C	; 12
     37a:	0e 94 9c 01 	call	0x338	; 0x338 <MAX7219_Write>
     37e:	08 95       	ret

00000380 <MAX7219_Clear>:
//Clear the outputs on the MAX7219
void MAX7219_Clear(){
	//Loop through the scan and send a blank
	int i = 0; //Iterator
	for(i = 0; i < 3; i++){
		MAX7219_Write(i, MAX7219_CHAR_BLANK);
     380:	6f e0       	ldi	r22, 0x0F	; 15
     382:	80 e0       	ldi	r24, 0x00	; 0
     384:	0e 94 9c 01 	call	0x338	; 0x338 <MAX7219_Write>
     388:	6f e0       	ldi	r22, 0x0F	; 15
     38a:	81 e0       	ldi	r24, 0x01	; 1
     38c:	0e 94 9c 01 	call	0x338	; 0x338 <MAX7219_Write>
     390:	6f e0       	ldi	r22, 0x0F	; 15
     392:	82 e0       	ldi	r24, 0x02	; 2
     394:	0e 94 9c 01 	call	0x338	; 0x338 <MAX7219_Write>
     398:	08 95       	ret

0000039a <MAX7219_Display4Digit>:
	}
	return;
}

//Write the number passed to this function to the seven segment output. Expecting a number 0.0 - 999.9
void MAX7219_Display4Digit(uint16_t number){
     39a:	df 92       	push	r13
     39c:	ef 92       	push	r14
     39e:	ff 92       	push	r15
     3a0:	0f 93       	push	r16
     3a2:	1f 93       	push	r17
     3a4:	cf 93       	push	r28
     3a6:	df 93       	push	r29
     3a8:	ec 01       	movw	r28, r24
	//Clear the display
	MAX7219_Clear();
     3aa:	0e 94 c0 01 	call	0x380	; 0x380 <MAX7219_Clear>
	//Get the hundreds place if applicable
	uint8_t hundreds = ((number / 1000) % 10);
     3ae:	9e 01       	movw	r18, r28
     3b0:	36 95       	lsr	r19
     3b2:	27 95       	ror	r18
     3b4:	36 95       	lsr	r19
     3b6:	27 95       	ror	r18
     3b8:	36 95       	lsr	r19
     3ba:	27 95       	ror	r18
     3bc:	a5 ec       	ldi	r26, 0xC5	; 197
     3be:	b0 e2       	ldi	r27, 0x20	; 32
     3c0:	0e 94 8d 04 	call	0x91a	; 0x91a <__umulhisi3>
     3c4:	fc 01       	movw	r30, r24
     3c6:	f2 95       	swap	r31
     3c8:	e2 95       	swap	r30
     3ca:	ef 70       	andi	r30, 0x0F	; 15
     3cc:	ef 27       	eor	r30, r31
     3ce:	ff 70       	andi	r31, 0x0F	; 15
     3d0:	ef 27       	eor	r30, r31
     3d2:	9f 01       	movw	r18, r30
     3d4:	ad ec       	ldi	r26, 0xCD	; 205
     3d6:	bc ec       	ldi	r27, 0xCC	; 204
     3d8:	0e 94 8d 04 	call	0x91a	; 0x91a <__umulhisi3>
     3dc:	96 95       	lsr	r25
     3de:	87 95       	ror	r24
     3e0:	96 95       	lsr	r25
     3e2:	87 95       	ror	r24
     3e4:	96 95       	lsr	r25
     3e6:	87 95       	ror	r24
     3e8:	9c 01       	movw	r18, r24
     3ea:	22 0f       	add	r18, r18
     3ec:	33 1f       	adc	r19, r19
     3ee:	88 0f       	add	r24, r24
     3f0:	99 1f       	adc	r25, r25
     3f2:	88 0f       	add	r24, r24
     3f4:	99 1f       	adc	r25, r25
     3f6:	88 0f       	add	r24, r24
     3f8:	99 1f       	adc	r25, r25
     3fa:	82 0f       	add	r24, r18
     3fc:	93 1f       	adc	r25, r19
     3fe:	e8 1b       	sub	r30, r24
     400:	f9 0b       	sbc	r31, r25
	//Get the tens place
	uint8_t tens = ((number / 100) % 10);
     402:	9e 01       	movw	r18, r28
     404:	36 95       	lsr	r19
     406:	27 95       	ror	r18
     408:	36 95       	lsr	r19
     40a:	27 95       	ror	r18
     40c:	ab e7       	ldi	r26, 0x7B	; 123
     40e:	b4 e1       	ldi	r27, 0x14	; 20
     410:	0e 94 8d 04 	call	0x91a	; 0x91a <__umulhisi3>
     414:	7c 01       	movw	r14, r24
     416:	f6 94       	lsr	r15
     418:	e7 94       	ror	r14
     41a:	97 01       	movw	r18, r14
     41c:	ad ec       	ldi	r26, 0xCD	; 205
     41e:	bc ec       	ldi	r27, 0xCC	; 204
     420:	0e 94 8d 04 	call	0x91a	; 0x91a <__umulhisi3>
     424:	96 95       	lsr	r25
     426:	87 95       	ror	r24
     428:	96 95       	lsr	r25
     42a:	87 95       	ror	r24
     42c:	96 95       	lsr	r25
     42e:	87 95       	ror	r24
     430:	9c 01       	movw	r18, r24
     432:	22 0f       	add	r18, r18
     434:	33 1f       	adc	r19, r19
     436:	88 0f       	add	r24, r24
     438:	99 1f       	adc	r25, r25
     43a:	88 0f       	add	r24, r24
     43c:	99 1f       	adc	r25, r25
     43e:	88 0f       	add	r24, r24
     440:	99 1f       	adc	r25, r25
     442:	82 0f       	add	r24, r18
     444:	93 1f       	adc	r25, r19
     446:	e8 1a       	sub	r14, r24
     448:	f9 0a       	sbc	r15, r25
	//Get the ones place
	uint8_t ones = ((number / 10) % 10);
     44a:	9e 01       	movw	r18, r28
     44c:	0e 94 8d 04 	call	0x91a	; 0x91a <__umulhisi3>
     450:	ac 01       	movw	r20, r24
     452:	56 95       	lsr	r21
     454:	47 95       	ror	r20
     456:	56 95       	lsr	r21
     458:	47 95       	ror	r20
     45a:	56 95       	lsr	r21
     45c:	47 95       	ror	r20
     45e:	9a 01       	movw	r18, r20
     460:	0e 94 8d 04 	call	0x91a	; 0x91a <__umulhisi3>
     464:	96 95       	lsr	r25
     466:	87 95       	ror	r24
     468:	96 95       	lsr	r25
     46a:	87 95       	ror	r24
     46c:	96 95       	lsr	r25
     46e:	87 95       	ror	r24
     470:	9c 01       	movw	r18, r24
     472:	22 0f       	add	r18, r18
     474:	33 1f       	adc	r19, r19
     476:	88 0f       	add	r24, r24
     478:	99 1f       	adc	r25, r25
     47a:	88 0f       	add	r24, r24
     47c:	99 1f       	adc	r25, r25
     47e:	88 0f       	add	r24, r24
     480:	99 1f       	adc	r25, r25
     482:	82 0f       	add	r24, r18
     484:	93 1f       	adc	r25, r19
     486:	8a 01       	movw	r16, r20
     488:	08 1b       	sub	r16, r24
     48a:	19 0b       	sbc	r17, r25
	//Get the tens decimal
	uint8_t tens_d = ((number / 1) % 10);
     48c:	ca 01       	movw	r24, r20
     48e:	88 0f       	add	r24, r24
     490:	99 1f       	adc	r25, r25
     492:	44 0f       	add	r20, r20
     494:	55 1f       	adc	r21, r21
     496:	44 0f       	add	r20, r20
     498:	55 1f       	adc	r21, r21
     49a:	44 0f       	add	r20, r20
     49c:	55 1f       	adc	r21, r21
     49e:	48 0f       	add	r20, r24
     4a0:	59 1f       	adc	r21, r25
     4a2:	c4 1b       	sub	r28, r20
     4a4:	d5 0b       	sbc	r29, r21
	//Push those numbers to their respective places on the display
	if(hundreds == 0){
     4a6:	e1 11       	cpse	r30, r1
     4a8:	07 c0       	rjmp	.+14     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
		//If the hundreds is zero then print a blank
		MAX7219_Write(MAX7219_DIGIT3, MAX7219_CHAR_BLANK);
     4aa:	6f e0       	ldi	r22, 0x0F	; 15
     4ac:	84 e0       	ldi	r24, 0x04	; 4
     4ae:	0e 94 9c 01 	call	0x338	; 0x338 <MAX7219_Write>
	}
	else{
		//Otherwise show it
		MAX7219_Write(MAX7219_DIGIT3, hundreds);
	}
	if(tens == 0 && hundreds == 0){
     4b2:	e1 10       	cpse	r14, r1
     4b4:	0b c0       	rjmp	.+22     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
     4b6:	05 c0       	rjmp	.+10     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
		//If the hundreds is zero then print a blank
		MAX7219_Write(MAX7219_DIGIT3, MAX7219_CHAR_BLANK);
	}
	else{
		//Otherwise show it
		MAX7219_Write(MAX7219_DIGIT3, hundreds);
     4b8:	6e 2f       	mov	r22, r30
     4ba:	84 e0       	ldi	r24, 0x04	; 4
     4bc:	0e 94 9c 01 	call	0x338	; 0x338 <MAX7219_Write>
     4c0:	05 c0       	rjmp	.+10     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
	}
	if(tens == 0 && hundreds == 0){
		//If the tens is zero as well as the hundreds then print a blank
		MAX7219_Write(MAX7219_DIGIT2, MAX7219_CHAR_BLANK);
     4c2:	6f e0       	ldi	r22, 0x0F	; 15
     4c4:	83 e0       	ldi	r24, 0x03	; 3
     4c6:	0e 94 9c 01 	call	0x338	; 0x338 <MAX7219_Write>
     4ca:	04 c0       	rjmp	.+8      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
	}
	else{
		//Otherwise show it
		MAX7219_Write(MAX7219_DIGIT2, tens);
     4cc:	6e 2d       	mov	r22, r14
     4ce:	83 e0       	ldi	r24, 0x03	; 3
     4d0:	0e 94 9c 01 	call	0x338	; 0x338 <MAX7219_Write>
	}
	MAX7219_Write(MAX7219_DIGIT1, ones);
     4d4:	60 2f       	mov	r22, r16
     4d6:	82 e0       	ldi	r24, 0x02	; 2
     4d8:	0e 94 9c 01 	call	0x338	; 0x338 <MAX7219_Write>
	MAX7219_Write(MAX7219_DIGIT0, tens_d);
     4dc:	6c 2f       	mov	r22, r28
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	0e 94 9c 01 	call	0x338	; 0x338 <MAX7219_Write>
	
	return; //Return to call point
}
     4e4:	df 91       	pop	r29
     4e6:	cf 91       	pop	r28
     4e8:	1f 91       	pop	r17
     4ea:	0f 91       	pop	r16
     4ec:	ff 90       	pop	r15
     4ee:	ef 90       	pop	r14
     4f0:	df 90       	pop	r13
     4f2:	08 95       	ret

000004f4 <SPI_Init>:
/******************** Functions **************************/

//Initialize the USI on the ATmega168/328 for Three-Wire Operation
void SPI_Init(){
	//Initialize the output for SPI Master Mode
	DDR_SPI |= (1<<SS)|(1<<MOSI)|(0<<MISO)|(1<<SCK); //SS | MOSI | MISO | SCK
     4f4:	84 b1       	in	r24, 0x04	; 4
     4f6:	87 60       	ori	r24, 0x07	; 7
     4f8:	84 b9       	out	0x04, r24	; 4
	//Set the default values for outputs to zero and inputs to have pull-up resistors
	PORT_SPI |= (0<<SS)|(0<<MOSI)|(1<<MISO)|(0<<SCK); //SS | MOSI | MISO | SCK
     4fa:	2b 9a       	sbi	0x05, 3	; 5
	//SPI Control Register, Enable, LSB bit first, Set to master mode, Mode 1:1, f/128 SCK Frequency
	SPCR = (1<<SPE) | (1<<DORD) | (1<<MSTR) | (1<<CPOL) | (1<<CPHA) | (1<<SPR1) | (0<<SPR0);
     4fc:	8e e7       	ldi	r24, 0x7E	; 126
     4fe:	8c bd       	out	0x2c, r24	; 44
	SPSR = (1<<SPI2X);
     500:	81 e0       	ldi	r24, 0x01	; 1
     502:	8d bd       	out	0x2d, r24	; 45
     504:	08 95       	ret

00000506 <SPI_Enable>:
}

//Enable the slave select line
void SPI_Enable(){
	//Enable SS Line
	PORT_SPI &= ~(1<<SS);
     506:	28 98       	cbi	0x05, 0	; 5
     508:	08 95       	ret

0000050a <SPI_Disable>:
}

//Enable the slave select line
void SPI_Disable(){
	//Disable SS Line
	PORT_SPI |= (1<<SS);
     50a:	28 9a       	sbi	0x05, 0	; 5
     50c:	08 95       	ret

0000050e <SPI_Transfer>:
}

//Writes the byte into the device
uint8_t SPI_Transfer(uint8_t byte){
	//Write data to SPI register
	SPDR = byte;
     50e:	8e bd       	out	0x2e, r24	; 46
	//Wait until the transmission is complete
	while(!(SPSR & (1<<SPIF)));
     510:	0d b4       	in	r0, 0x2d	; 45
     512:	07 fe       	sbrs	r0, 7
     514:	fd cf       	rjmp	.-6      	; 0x510 <SPI_Transfer+0x2>
	//Return the data in the register
	return SPDR;
     516:	8e b5       	in	r24, 0x2e	; 46
}
     518:	08 95       	ret

0000051a <USART_Init>:
unsigned char USART_Read(){
	//Wait for data to be received
	while(!(UCSR0A & (1<<RXC0)));
	//Return received data from the buffer
	return UDR0; //Go back to previous location
}
     51a:	9c 01       	movw	r18, r24
     51c:	51 9a       	sbi	0x0a, 1	; 10
     51e:	8b b1       	in	r24, 0x0b	; 11
     520:	8b b9       	out	0x0b, r24	; 11
     522:	c9 01       	movw	r24, r18
     524:	a0 e0       	ldi	r26, 0x00	; 0
     526:	b0 e0       	ldi	r27, 0x00	; 0
     528:	88 0f       	add	r24, r24
     52a:	99 1f       	adc	r25, r25
     52c:	aa 1f       	adc	r26, r26
     52e:	bb 1f       	adc	r27, r27
     530:	88 0f       	add	r24, r24
     532:	99 1f       	adc	r25, r25
     534:	aa 1f       	adc	r26, r26
     536:	bb 1f       	adc	r27, r27
     538:	9c 01       	movw	r18, r24
     53a:	ad 01       	movw	r20, r26
     53c:	22 0f       	add	r18, r18
     53e:	33 1f       	adc	r19, r19
     540:	44 1f       	adc	r20, r20
     542:	55 1f       	adc	r21, r21
     544:	22 0f       	add	r18, r18
     546:	33 1f       	adc	r19, r19
     548:	44 1f       	adc	r20, r20
     54a:	55 1f       	adc	r21, r21
     54c:	60 e0       	ldi	r22, 0x00	; 0
     54e:	74 e2       	ldi	r23, 0x24	; 36
     550:	84 ef       	ldi	r24, 0xF4	; 244
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__udivmodsi4>
     558:	21 50       	subi	r18, 0x01	; 1
     55a:	31 09       	sbc	r19, r1
     55c:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     560:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     564:	e1 ec       	ldi	r30, 0xC1	; 193
     566:	f0 e0       	ldi	r31, 0x00	; 0
     568:	80 81       	ld	r24, Z
     56a:	88 61       	ori	r24, 0x18	; 24
     56c:	80 83       	st	Z, r24
     56e:	e2 ec       	ldi	r30, 0xC2	; 194
     570:	f0 e0       	ldi	r31, 0x00	; 0
     572:	80 81       	ld	r24, Z
     574:	86 60       	ori	r24, 0x06	; 6
     576:	80 83       	st	Z, r24
     578:	08 95       	ret

0000057a <USART_Write>:

//Function to write to the UDR0 buffer out
void USART_Write(char data){
	//Wait until the buffer is clear
	while(!(UCSR0A & (1<<UDRE0)));
     57a:	e0 ec       	ldi	r30, 0xC0	; 192
     57c:	f0 e0       	ldi	r31, 0x00	; 0
     57e:	90 81       	ld	r25, Z
     580:	95 ff       	sbrs	r25, 5
     582:	fd cf       	rjmp	.-6      	; 0x57e <USART_Write+0x4>
	//Write the data to the buffer
	UDR0 = data;
     584:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     588:	08 95       	ret

0000058a <USART_WriteString>:
	return; //Go back to call point
}


//Write a string to the output
void USART_WriteString(char *data){
     58a:	cf 93       	push	r28
     58c:	df 93       	push	r29
     58e:	ec 01       	movw	r28, r24
	while(*data != '\0'){
     590:	88 81       	ld	r24, Y
     592:	88 23       	and	r24, r24
     594:	31 f0       	breq	.+12     	; 0x5a2 <USART_WriteString+0x18>
     596:	21 96       	adiw	r28, 0x01	; 1
		USART_Write(*data);
     598:	0e 94 bd 02 	call	0x57a	; 0x57a <USART_Write>
}


//Write a string to the output
void USART_WriteString(char *data){
	while(*data != '\0'){
     59c:	89 91       	ld	r24, Y+
     59e:	81 11       	cpse	r24, r1
     5a0:	fb cf       	rjmp	.-10     	; 0x598 <USART_WriteString+0xe>
		USART_Write(*data);
		++data;
	}
	return; //Go back to call point
}
     5a2:	df 91       	pop	r29
     5a4:	cf 91       	pop	r28
     5a6:	08 95       	ret

000005a8 <__subsf3>:
     5a8:	50 58       	subi	r21, 0x80	; 128

000005aa <__addsf3>:
     5aa:	bb 27       	eor	r27, r27
     5ac:	aa 27       	eor	r26, r26
     5ae:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <__addsf3x>
     5b2:	0c 94 c4 03 	jmp	0x788	; 0x788 <__fp_round>
     5b6:	0e 94 b6 03 	call	0x76c	; 0x76c <__fp_pscA>
     5ba:	38 f0       	brcs	.+14     	; 0x5ca <__addsf3+0x20>
     5bc:	0e 94 bd 03 	call	0x77a	; 0x77a <__fp_pscB>
     5c0:	20 f0       	brcs	.+8      	; 0x5ca <__addsf3+0x20>
     5c2:	39 f4       	brne	.+14     	; 0x5d2 <__addsf3+0x28>
     5c4:	9f 3f       	cpi	r25, 0xFF	; 255
     5c6:	19 f4       	brne	.+6      	; 0x5ce <__addsf3+0x24>
     5c8:	26 f4       	brtc	.+8      	; 0x5d2 <__addsf3+0x28>
     5ca:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_nan>
     5ce:	0e f4       	brtc	.+2      	; 0x5d2 <__addsf3+0x28>
     5d0:	e0 95       	com	r30
     5d2:	e7 fb       	bst	r30, 7
     5d4:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>

000005d8 <__addsf3x>:
     5d8:	e9 2f       	mov	r30, r25
     5da:	0e 94 d5 03 	call	0x7aa	; 0x7aa <__fp_split3>
     5de:	58 f3       	brcs	.-42     	; 0x5b6 <__addsf3+0xc>
     5e0:	ba 17       	cp	r27, r26
     5e2:	62 07       	cpc	r22, r18
     5e4:	73 07       	cpc	r23, r19
     5e6:	84 07       	cpc	r24, r20
     5e8:	95 07       	cpc	r25, r21
     5ea:	20 f0       	brcs	.+8      	; 0x5f4 <__addsf3x+0x1c>
     5ec:	79 f4       	brne	.+30     	; 0x60c <__addsf3x+0x34>
     5ee:	a6 f5       	brtc	.+104    	; 0x658 <__addsf3x+0x80>
     5f0:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <__fp_zero>
     5f4:	0e f4       	brtc	.+2      	; 0x5f8 <__addsf3x+0x20>
     5f6:	e0 95       	com	r30
     5f8:	0b 2e       	mov	r0, r27
     5fa:	ba 2f       	mov	r27, r26
     5fc:	a0 2d       	mov	r26, r0
     5fe:	0b 01       	movw	r0, r22
     600:	b9 01       	movw	r22, r18
     602:	90 01       	movw	r18, r0
     604:	0c 01       	movw	r0, r24
     606:	ca 01       	movw	r24, r20
     608:	a0 01       	movw	r20, r0
     60a:	11 24       	eor	r1, r1
     60c:	ff 27       	eor	r31, r31
     60e:	59 1b       	sub	r21, r25
     610:	99 f0       	breq	.+38     	; 0x638 <__addsf3x+0x60>
     612:	59 3f       	cpi	r21, 0xF9	; 249
     614:	50 f4       	brcc	.+20     	; 0x62a <__addsf3x+0x52>
     616:	50 3e       	cpi	r21, 0xE0	; 224
     618:	68 f1       	brcs	.+90     	; 0x674 <__addsf3x+0x9c>
     61a:	1a 16       	cp	r1, r26
     61c:	f0 40       	sbci	r31, 0x00	; 0
     61e:	a2 2f       	mov	r26, r18
     620:	23 2f       	mov	r18, r19
     622:	34 2f       	mov	r19, r20
     624:	44 27       	eor	r20, r20
     626:	58 5f       	subi	r21, 0xF8	; 248
     628:	f3 cf       	rjmp	.-26     	; 0x610 <__addsf3x+0x38>
     62a:	46 95       	lsr	r20
     62c:	37 95       	ror	r19
     62e:	27 95       	ror	r18
     630:	a7 95       	ror	r26
     632:	f0 40       	sbci	r31, 0x00	; 0
     634:	53 95       	inc	r21
     636:	c9 f7       	brne	.-14     	; 0x62a <__addsf3x+0x52>
     638:	7e f4       	brtc	.+30     	; 0x658 <__addsf3x+0x80>
     63a:	1f 16       	cp	r1, r31
     63c:	ba 0b       	sbc	r27, r26
     63e:	62 0b       	sbc	r22, r18
     640:	73 0b       	sbc	r23, r19
     642:	84 0b       	sbc	r24, r20
     644:	ba f0       	brmi	.+46     	; 0x674 <__addsf3x+0x9c>
     646:	91 50       	subi	r25, 0x01	; 1
     648:	a1 f0       	breq	.+40     	; 0x672 <__addsf3x+0x9a>
     64a:	ff 0f       	add	r31, r31
     64c:	bb 1f       	adc	r27, r27
     64e:	66 1f       	adc	r22, r22
     650:	77 1f       	adc	r23, r23
     652:	88 1f       	adc	r24, r24
     654:	c2 f7       	brpl	.-16     	; 0x646 <__addsf3x+0x6e>
     656:	0e c0       	rjmp	.+28     	; 0x674 <__addsf3x+0x9c>
     658:	ba 0f       	add	r27, r26
     65a:	62 1f       	adc	r22, r18
     65c:	73 1f       	adc	r23, r19
     65e:	84 1f       	adc	r24, r20
     660:	48 f4       	brcc	.+18     	; 0x674 <__addsf3x+0x9c>
     662:	87 95       	ror	r24
     664:	77 95       	ror	r23
     666:	67 95       	ror	r22
     668:	b7 95       	ror	r27
     66a:	f7 95       	ror	r31
     66c:	9e 3f       	cpi	r25, 0xFE	; 254
     66e:	08 f0       	brcs	.+2      	; 0x672 <__addsf3x+0x9a>
     670:	b0 cf       	rjmp	.-160    	; 0x5d2 <__addsf3+0x28>
     672:	93 95       	inc	r25
     674:	88 0f       	add	r24, r24
     676:	08 f0       	brcs	.+2      	; 0x67a <__addsf3x+0xa2>
     678:	99 27       	eor	r25, r25
     67a:	ee 0f       	add	r30, r30
     67c:	97 95       	ror	r25
     67e:	87 95       	ror	r24
     680:	08 95       	ret

00000682 <__fixunssfsi>:
     682:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_splitA>
     686:	88 f0       	brcs	.+34     	; 0x6aa <__fixunssfsi+0x28>
     688:	9f 57       	subi	r25, 0x7F	; 127
     68a:	98 f0       	brcs	.+38     	; 0x6b2 <__fixunssfsi+0x30>
     68c:	b9 2f       	mov	r27, r25
     68e:	99 27       	eor	r25, r25
     690:	b7 51       	subi	r27, 0x17	; 23
     692:	b0 f0       	brcs	.+44     	; 0x6c0 <__fixunssfsi+0x3e>
     694:	e1 f0       	breq	.+56     	; 0x6ce <__fixunssfsi+0x4c>
     696:	66 0f       	add	r22, r22
     698:	77 1f       	adc	r23, r23
     69a:	88 1f       	adc	r24, r24
     69c:	99 1f       	adc	r25, r25
     69e:	1a f0       	brmi	.+6      	; 0x6a6 <__fixunssfsi+0x24>
     6a0:	ba 95       	dec	r27
     6a2:	c9 f7       	brne	.-14     	; 0x696 <__fixunssfsi+0x14>
     6a4:	14 c0       	rjmp	.+40     	; 0x6ce <__fixunssfsi+0x4c>
     6a6:	b1 30       	cpi	r27, 0x01	; 1
     6a8:	91 f0       	breq	.+36     	; 0x6ce <__fixunssfsi+0x4c>
     6aa:	0e 94 f7 03 	call	0x7ee	; 0x7ee <__fp_zero>
     6ae:	b1 e0       	ldi	r27, 0x01	; 1
     6b0:	08 95       	ret
     6b2:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <__fp_zero>
     6b6:	67 2f       	mov	r22, r23
     6b8:	78 2f       	mov	r23, r24
     6ba:	88 27       	eor	r24, r24
     6bc:	b8 5f       	subi	r27, 0xF8	; 248
     6be:	39 f0       	breq	.+14     	; 0x6ce <__fixunssfsi+0x4c>
     6c0:	b9 3f       	cpi	r27, 0xF9	; 249
     6c2:	cc f3       	brlt	.-14     	; 0x6b6 <__fixunssfsi+0x34>
     6c4:	86 95       	lsr	r24
     6c6:	77 95       	ror	r23
     6c8:	67 95       	ror	r22
     6ca:	b3 95       	inc	r27
     6cc:	d9 f7       	brne	.-10     	; 0x6c4 <__fixunssfsi+0x42>
     6ce:	3e f4       	brtc	.+14     	; 0x6de <__fixunssfsi+0x5c>
     6d0:	90 95       	com	r25
     6d2:	80 95       	com	r24
     6d4:	70 95       	com	r23
     6d6:	61 95       	neg	r22
     6d8:	7f 4f       	sbci	r23, 0xFF	; 255
     6da:	8f 4f       	sbci	r24, 0xFF	; 255
     6dc:	9f 4f       	sbci	r25, 0xFF	; 255
     6de:	08 95       	ret

000006e0 <__floatunsisf>:
     6e0:	e8 94       	clt
     6e2:	09 c0       	rjmp	.+18     	; 0x6f6 <__floatsisf+0x12>

000006e4 <__floatsisf>:
     6e4:	97 fb       	bst	r25, 7
     6e6:	3e f4       	brtc	.+14     	; 0x6f6 <__floatsisf+0x12>
     6e8:	90 95       	com	r25
     6ea:	80 95       	com	r24
     6ec:	70 95       	com	r23
     6ee:	61 95       	neg	r22
     6f0:	7f 4f       	sbci	r23, 0xFF	; 255
     6f2:	8f 4f       	sbci	r24, 0xFF	; 255
     6f4:	9f 4f       	sbci	r25, 0xFF	; 255
     6f6:	99 23       	and	r25, r25
     6f8:	a9 f0       	breq	.+42     	; 0x724 <__floatsisf+0x40>
     6fa:	f9 2f       	mov	r31, r25
     6fc:	96 e9       	ldi	r25, 0x96	; 150
     6fe:	bb 27       	eor	r27, r27
     700:	93 95       	inc	r25
     702:	f6 95       	lsr	r31
     704:	87 95       	ror	r24
     706:	77 95       	ror	r23
     708:	67 95       	ror	r22
     70a:	b7 95       	ror	r27
     70c:	f1 11       	cpse	r31, r1
     70e:	f8 cf       	rjmp	.-16     	; 0x700 <__floatsisf+0x1c>
     710:	fa f4       	brpl	.+62     	; 0x750 <__floatsisf+0x6c>
     712:	bb 0f       	add	r27, r27
     714:	11 f4       	brne	.+4      	; 0x71a <__floatsisf+0x36>
     716:	60 ff       	sbrs	r22, 0
     718:	1b c0       	rjmp	.+54     	; 0x750 <__floatsisf+0x6c>
     71a:	6f 5f       	subi	r22, 0xFF	; 255
     71c:	7f 4f       	sbci	r23, 0xFF	; 255
     71e:	8f 4f       	sbci	r24, 0xFF	; 255
     720:	9f 4f       	sbci	r25, 0xFF	; 255
     722:	16 c0       	rjmp	.+44     	; 0x750 <__floatsisf+0x6c>
     724:	88 23       	and	r24, r24
     726:	11 f0       	breq	.+4      	; 0x72c <__floatsisf+0x48>
     728:	96 e9       	ldi	r25, 0x96	; 150
     72a:	11 c0       	rjmp	.+34     	; 0x74e <__floatsisf+0x6a>
     72c:	77 23       	and	r23, r23
     72e:	21 f0       	breq	.+8      	; 0x738 <__floatsisf+0x54>
     730:	9e e8       	ldi	r25, 0x8E	; 142
     732:	87 2f       	mov	r24, r23
     734:	76 2f       	mov	r23, r22
     736:	05 c0       	rjmp	.+10     	; 0x742 <__floatsisf+0x5e>
     738:	66 23       	and	r22, r22
     73a:	71 f0       	breq	.+28     	; 0x758 <__floatsisf+0x74>
     73c:	96 e8       	ldi	r25, 0x86	; 134
     73e:	86 2f       	mov	r24, r22
     740:	70 e0       	ldi	r23, 0x00	; 0
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	2a f0       	brmi	.+10     	; 0x750 <__floatsisf+0x6c>
     746:	9a 95       	dec	r25
     748:	66 0f       	add	r22, r22
     74a:	77 1f       	adc	r23, r23
     74c:	88 1f       	adc	r24, r24
     74e:	da f7       	brpl	.-10     	; 0x746 <__floatsisf+0x62>
     750:	88 0f       	add	r24, r24
     752:	96 95       	lsr	r25
     754:	87 95       	ror	r24
     756:	97 f9       	bld	r25, 7
     758:	08 95       	ret

0000075a <__fp_inf>:
     75a:	97 f9       	bld	r25, 7
     75c:	9f 67       	ori	r25, 0x7F	; 127
     75e:	80 e8       	ldi	r24, 0x80	; 128
     760:	70 e0       	ldi	r23, 0x00	; 0
     762:	60 e0       	ldi	r22, 0x00	; 0
     764:	08 95       	ret

00000766 <__fp_nan>:
     766:	9f ef       	ldi	r25, 0xFF	; 255
     768:	80 ec       	ldi	r24, 0xC0	; 192
     76a:	08 95       	ret

0000076c <__fp_pscA>:
     76c:	00 24       	eor	r0, r0
     76e:	0a 94       	dec	r0
     770:	16 16       	cp	r1, r22
     772:	17 06       	cpc	r1, r23
     774:	18 06       	cpc	r1, r24
     776:	09 06       	cpc	r0, r25
     778:	08 95       	ret

0000077a <__fp_pscB>:
     77a:	00 24       	eor	r0, r0
     77c:	0a 94       	dec	r0
     77e:	12 16       	cp	r1, r18
     780:	13 06       	cpc	r1, r19
     782:	14 06       	cpc	r1, r20
     784:	05 06       	cpc	r0, r21
     786:	08 95       	ret

00000788 <__fp_round>:
     788:	09 2e       	mov	r0, r25
     78a:	03 94       	inc	r0
     78c:	00 0c       	add	r0, r0
     78e:	11 f4       	brne	.+4      	; 0x794 <__fp_round+0xc>
     790:	88 23       	and	r24, r24
     792:	52 f0       	brmi	.+20     	; 0x7a8 <__fp_round+0x20>
     794:	bb 0f       	add	r27, r27
     796:	40 f4       	brcc	.+16     	; 0x7a8 <__fp_round+0x20>
     798:	bf 2b       	or	r27, r31
     79a:	11 f4       	brne	.+4      	; 0x7a0 <__fp_round+0x18>
     79c:	60 ff       	sbrs	r22, 0
     79e:	04 c0       	rjmp	.+8      	; 0x7a8 <__fp_round+0x20>
     7a0:	6f 5f       	subi	r22, 0xFF	; 255
     7a2:	7f 4f       	sbci	r23, 0xFF	; 255
     7a4:	8f 4f       	sbci	r24, 0xFF	; 255
     7a6:	9f 4f       	sbci	r25, 0xFF	; 255
     7a8:	08 95       	ret

000007aa <__fp_split3>:
     7aa:	57 fd       	sbrc	r21, 7
     7ac:	90 58       	subi	r25, 0x80	; 128
     7ae:	44 0f       	add	r20, r20
     7b0:	55 1f       	adc	r21, r21
     7b2:	59 f0       	breq	.+22     	; 0x7ca <__fp_splitA+0x10>
     7b4:	5f 3f       	cpi	r21, 0xFF	; 255
     7b6:	71 f0       	breq	.+28     	; 0x7d4 <__fp_splitA+0x1a>
     7b8:	47 95       	ror	r20

000007ba <__fp_splitA>:
     7ba:	88 0f       	add	r24, r24
     7bc:	97 fb       	bst	r25, 7
     7be:	99 1f       	adc	r25, r25
     7c0:	61 f0       	breq	.+24     	; 0x7da <__fp_splitA+0x20>
     7c2:	9f 3f       	cpi	r25, 0xFF	; 255
     7c4:	79 f0       	breq	.+30     	; 0x7e4 <__fp_splitA+0x2a>
     7c6:	87 95       	ror	r24
     7c8:	08 95       	ret
     7ca:	12 16       	cp	r1, r18
     7cc:	13 06       	cpc	r1, r19
     7ce:	14 06       	cpc	r1, r20
     7d0:	55 1f       	adc	r21, r21
     7d2:	f2 cf       	rjmp	.-28     	; 0x7b8 <__fp_split3+0xe>
     7d4:	46 95       	lsr	r20
     7d6:	f1 df       	rcall	.-30     	; 0x7ba <__fp_splitA>
     7d8:	08 c0       	rjmp	.+16     	; 0x7ea <__fp_splitA+0x30>
     7da:	16 16       	cp	r1, r22
     7dc:	17 06       	cpc	r1, r23
     7de:	18 06       	cpc	r1, r24
     7e0:	99 1f       	adc	r25, r25
     7e2:	f1 cf       	rjmp	.-30     	; 0x7c6 <__fp_splitA+0xc>
     7e4:	86 95       	lsr	r24
     7e6:	71 05       	cpc	r23, r1
     7e8:	61 05       	cpc	r22, r1
     7ea:	08 94       	sec
     7ec:	08 95       	ret

000007ee <__fp_zero>:
     7ee:	e8 94       	clt

000007f0 <__fp_szero>:
     7f0:	bb 27       	eor	r27, r27
     7f2:	66 27       	eor	r22, r22
     7f4:	77 27       	eor	r23, r23
     7f6:	cb 01       	movw	r24, r22
     7f8:	97 f9       	bld	r25, 7
     7fa:	08 95       	ret

000007fc <__mulsf3>:
     7fc:	0e 94 11 04 	call	0x822	; 0x822 <__mulsf3x>
     800:	0c 94 c4 03 	jmp	0x788	; 0x788 <__fp_round>
     804:	0e 94 b6 03 	call	0x76c	; 0x76c <__fp_pscA>
     808:	38 f0       	brcs	.+14     	; 0x818 <__mulsf3+0x1c>
     80a:	0e 94 bd 03 	call	0x77a	; 0x77a <__fp_pscB>
     80e:	20 f0       	brcs	.+8      	; 0x818 <__mulsf3+0x1c>
     810:	95 23       	and	r25, r21
     812:	11 f0       	breq	.+4      	; 0x818 <__mulsf3+0x1c>
     814:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>
     818:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_nan>
     81c:	11 24       	eor	r1, r1
     81e:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_szero>

00000822 <__mulsf3x>:
     822:	0e 94 d5 03 	call	0x7aa	; 0x7aa <__fp_split3>
     826:	70 f3       	brcs	.-36     	; 0x804 <__mulsf3+0x8>

00000828 <__mulsf3_pse>:
     828:	95 9f       	mul	r25, r21
     82a:	c1 f3       	breq	.-16     	; 0x81c <__mulsf3+0x20>
     82c:	95 0f       	add	r25, r21
     82e:	50 e0       	ldi	r21, 0x00	; 0
     830:	55 1f       	adc	r21, r21
     832:	62 9f       	mul	r22, r18
     834:	f0 01       	movw	r30, r0
     836:	72 9f       	mul	r23, r18
     838:	bb 27       	eor	r27, r27
     83a:	f0 0d       	add	r31, r0
     83c:	b1 1d       	adc	r27, r1
     83e:	63 9f       	mul	r22, r19
     840:	aa 27       	eor	r26, r26
     842:	f0 0d       	add	r31, r0
     844:	b1 1d       	adc	r27, r1
     846:	aa 1f       	adc	r26, r26
     848:	64 9f       	mul	r22, r20
     84a:	66 27       	eor	r22, r22
     84c:	b0 0d       	add	r27, r0
     84e:	a1 1d       	adc	r26, r1
     850:	66 1f       	adc	r22, r22
     852:	82 9f       	mul	r24, r18
     854:	22 27       	eor	r18, r18
     856:	b0 0d       	add	r27, r0
     858:	a1 1d       	adc	r26, r1
     85a:	62 1f       	adc	r22, r18
     85c:	73 9f       	mul	r23, r19
     85e:	b0 0d       	add	r27, r0
     860:	a1 1d       	adc	r26, r1
     862:	62 1f       	adc	r22, r18
     864:	83 9f       	mul	r24, r19
     866:	a0 0d       	add	r26, r0
     868:	61 1d       	adc	r22, r1
     86a:	22 1f       	adc	r18, r18
     86c:	74 9f       	mul	r23, r20
     86e:	33 27       	eor	r19, r19
     870:	a0 0d       	add	r26, r0
     872:	61 1d       	adc	r22, r1
     874:	23 1f       	adc	r18, r19
     876:	84 9f       	mul	r24, r20
     878:	60 0d       	add	r22, r0
     87a:	21 1d       	adc	r18, r1
     87c:	82 2f       	mov	r24, r18
     87e:	76 2f       	mov	r23, r22
     880:	6a 2f       	mov	r22, r26
     882:	11 24       	eor	r1, r1
     884:	9f 57       	subi	r25, 0x7F	; 127
     886:	50 40       	sbci	r21, 0x00	; 0
     888:	9a f0       	brmi	.+38     	; 0x8b0 <__mulsf3_pse+0x88>
     88a:	f1 f0       	breq	.+60     	; 0x8c8 <__mulsf3_pse+0xa0>
     88c:	88 23       	and	r24, r24
     88e:	4a f0       	brmi	.+18     	; 0x8a2 <__mulsf3_pse+0x7a>
     890:	ee 0f       	add	r30, r30
     892:	ff 1f       	adc	r31, r31
     894:	bb 1f       	adc	r27, r27
     896:	66 1f       	adc	r22, r22
     898:	77 1f       	adc	r23, r23
     89a:	88 1f       	adc	r24, r24
     89c:	91 50       	subi	r25, 0x01	; 1
     89e:	50 40       	sbci	r21, 0x00	; 0
     8a0:	a9 f7       	brne	.-22     	; 0x88c <__mulsf3_pse+0x64>
     8a2:	9e 3f       	cpi	r25, 0xFE	; 254
     8a4:	51 05       	cpc	r21, r1
     8a6:	80 f0       	brcs	.+32     	; 0x8c8 <__mulsf3_pse+0xa0>
     8a8:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>
     8ac:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_szero>
     8b0:	5f 3f       	cpi	r21, 0xFF	; 255
     8b2:	e4 f3       	brlt	.-8      	; 0x8ac <__mulsf3_pse+0x84>
     8b4:	98 3e       	cpi	r25, 0xE8	; 232
     8b6:	d4 f3       	brlt	.-12     	; 0x8ac <__mulsf3_pse+0x84>
     8b8:	86 95       	lsr	r24
     8ba:	77 95       	ror	r23
     8bc:	67 95       	ror	r22
     8be:	b7 95       	ror	r27
     8c0:	f7 95       	ror	r31
     8c2:	e7 95       	ror	r30
     8c4:	9f 5f       	subi	r25, 0xFF	; 255
     8c6:	c1 f7       	brne	.-16     	; 0x8b8 <__mulsf3_pse+0x90>
     8c8:	fe 2b       	or	r31, r30
     8ca:	88 0f       	add	r24, r24
     8cc:	91 1d       	adc	r25, r1
     8ce:	96 95       	lsr	r25
     8d0:	87 95       	ror	r24
     8d2:	97 f9       	bld	r25, 7
     8d4:	08 95       	ret

000008d6 <__udivmodsi4>:
     8d6:	a1 e2       	ldi	r26, 0x21	; 33
     8d8:	1a 2e       	mov	r1, r26
     8da:	aa 1b       	sub	r26, r26
     8dc:	bb 1b       	sub	r27, r27
     8de:	fd 01       	movw	r30, r26
     8e0:	0d c0       	rjmp	.+26     	; 0x8fc <__udivmodsi4_ep>

000008e2 <__udivmodsi4_loop>:
     8e2:	aa 1f       	adc	r26, r26
     8e4:	bb 1f       	adc	r27, r27
     8e6:	ee 1f       	adc	r30, r30
     8e8:	ff 1f       	adc	r31, r31
     8ea:	a2 17       	cp	r26, r18
     8ec:	b3 07       	cpc	r27, r19
     8ee:	e4 07       	cpc	r30, r20
     8f0:	f5 07       	cpc	r31, r21
     8f2:	20 f0       	brcs	.+8      	; 0x8fc <__udivmodsi4_ep>
     8f4:	a2 1b       	sub	r26, r18
     8f6:	b3 0b       	sbc	r27, r19
     8f8:	e4 0b       	sbc	r30, r20
     8fa:	f5 0b       	sbc	r31, r21

000008fc <__udivmodsi4_ep>:
     8fc:	66 1f       	adc	r22, r22
     8fe:	77 1f       	adc	r23, r23
     900:	88 1f       	adc	r24, r24
     902:	99 1f       	adc	r25, r25
     904:	1a 94       	dec	r1
     906:	69 f7       	brne	.-38     	; 0x8e2 <__udivmodsi4_loop>
     908:	60 95       	com	r22
     90a:	70 95       	com	r23
     90c:	80 95       	com	r24
     90e:	90 95       	com	r25
     910:	9b 01       	movw	r18, r22
     912:	ac 01       	movw	r20, r24
     914:	bd 01       	movw	r22, r26
     916:	cf 01       	movw	r24, r30
     918:	08 95       	ret

0000091a <__umulhisi3>:
     91a:	a2 9f       	mul	r26, r18
     91c:	b0 01       	movw	r22, r0
     91e:	b3 9f       	mul	r27, r19
     920:	c0 01       	movw	r24, r0
     922:	a3 9f       	mul	r26, r19
     924:	70 0d       	add	r23, r0
     926:	81 1d       	adc	r24, r1
     928:	11 24       	eor	r1, r1
     92a:	91 1d       	adc	r25, r1
     92c:	b2 9f       	mul	r27, r18
     92e:	70 0d       	add	r23, r0
     930:	81 1d       	adc	r24, r1
     932:	11 24       	eor	r1, r1
     934:	91 1d       	adc	r25, r1
     936:	08 95       	ret

00000938 <dtostrf>:
     938:	ef 92       	push	r14
     93a:	0f 93       	push	r16
     93c:	1f 93       	push	r17
     93e:	cf 93       	push	r28
     940:	df 93       	push	r29
     942:	e8 01       	movw	r28, r16
     944:	47 fd       	sbrc	r20, 7
     946:	02 c0       	rjmp	.+4      	; 0x94c <dtostrf+0x14>
     948:	34 e0       	ldi	r19, 0x04	; 4
     94a:	01 c0       	rjmp	.+2      	; 0x94e <dtostrf+0x16>
     94c:	34 e1       	ldi	r19, 0x14	; 20
     94e:	04 2e       	mov	r0, r20
     950:	00 0c       	add	r0, r0
     952:	55 0b       	sbc	r21, r21
     954:	57 ff       	sbrs	r21, 7
     956:	03 c0       	rjmp	.+6      	; 0x95e <dtostrf+0x26>
     958:	51 95       	neg	r21
     95a:	41 95       	neg	r20
     95c:	51 09       	sbc	r21, r1
     95e:	e3 2e       	mov	r14, r19
     960:	02 2f       	mov	r16, r18
     962:	24 2f       	mov	r18, r20
     964:	ae 01       	movw	r20, r28
     966:	0e 94 bf 06 	call	0xd7e	; 0xd7e <dtoa_prf>
     96a:	ce 01       	movw	r24, r28
     96c:	df 91       	pop	r29
     96e:	cf 91       	pop	r28
     970:	1f 91       	pop	r17
     972:	0f 91       	pop	r16
     974:	ef 90       	pop	r14
     976:	08 95       	ret

00000978 <sprintf>:
     978:	ae e0       	ldi	r26, 0x0E	; 14
     97a:	b0 e0       	ldi	r27, 0x00	; 0
     97c:	e2 ec       	ldi	r30, 0xC2	; 194
     97e:	f4 e0       	ldi	r31, 0x04	; 4
     980:	0c 94 af 09 	jmp	0x135e	; 0x135e <__prologue_saves__+0x1c>
     984:	0d 89       	ldd	r16, Y+21	; 0x15
     986:	1e 89       	ldd	r17, Y+22	; 0x16
     988:	86 e0       	ldi	r24, 0x06	; 6
     98a:	8c 83       	std	Y+4, r24	; 0x04
     98c:	1a 83       	std	Y+2, r17	; 0x02
     98e:	09 83       	std	Y+1, r16	; 0x01
     990:	8f ef       	ldi	r24, 0xFF	; 255
     992:	9f e7       	ldi	r25, 0x7F	; 127
     994:	9e 83       	std	Y+6, r25	; 0x06
     996:	8d 83       	std	Y+5, r24	; 0x05
     998:	ae 01       	movw	r20, r28
     99a:	47 5e       	subi	r20, 0xE7	; 231
     99c:	5f 4f       	sbci	r21, 0xFF	; 255
     99e:	6f 89       	ldd	r22, Y+23	; 0x17
     9a0:	78 8d       	ldd	r23, Y+24	; 0x18
     9a2:	ce 01       	movw	r24, r28
     9a4:	01 96       	adiw	r24, 0x01	; 1
     9a6:	0e 94 de 04 	call	0x9bc	; 0x9bc <vfprintf>
     9aa:	ef 81       	ldd	r30, Y+7	; 0x07
     9ac:	f8 85       	ldd	r31, Y+8	; 0x08
     9ae:	e0 0f       	add	r30, r16
     9b0:	f1 1f       	adc	r31, r17
     9b2:	10 82       	st	Z, r1
     9b4:	2e 96       	adiw	r28, 0x0e	; 14
     9b6:	e4 e0       	ldi	r30, 0x04	; 4
     9b8:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__epilogue_restores__+0x1c>

000009bc <vfprintf>:
     9bc:	ab e0       	ldi	r26, 0x0B	; 11
     9be:	b0 e0       	ldi	r27, 0x00	; 0
     9c0:	e4 ee       	ldi	r30, 0xE4	; 228
     9c2:	f4 e0       	ldi	r31, 0x04	; 4
     9c4:	0c 94 a1 09 	jmp	0x1342	; 0x1342 <__prologue_saves__>
     9c8:	6c 01       	movw	r12, r24
     9ca:	7b 01       	movw	r14, r22
     9cc:	8a 01       	movw	r16, r20
     9ce:	fc 01       	movw	r30, r24
     9d0:	17 82       	std	Z+7, r1	; 0x07
     9d2:	16 82       	std	Z+6, r1	; 0x06
     9d4:	83 81       	ldd	r24, Z+3	; 0x03
     9d6:	81 ff       	sbrs	r24, 1
     9d8:	cc c1       	rjmp	.+920    	; 0xd72 <vfprintf+0x3b6>
     9da:	ce 01       	movw	r24, r28
     9dc:	01 96       	adiw	r24, 0x01	; 1
     9de:	3c 01       	movw	r6, r24
     9e0:	f6 01       	movw	r30, r12
     9e2:	93 81       	ldd	r25, Z+3	; 0x03
     9e4:	f7 01       	movw	r30, r14
     9e6:	93 fd       	sbrc	r25, 3
     9e8:	85 91       	lpm	r24, Z+
     9ea:	93 ff       	sbrs	r25, 3
     9ec:	81 91       	ld	r24, Z+
     9ee:	7f 01       	movw	r14, r30
     9f0:	88 23       	and	r24, r24
     9f2:	09 f4       	brne	.+2      	; 0x9f6 <vfprintf+0x3a>
     9f4:	ba c1       	rjmp	.+884    	; 0xd6a <vfprintf+0x3ae>
     9f6:	85 32       	cpi	r24, 0x25	; 37
     9f8:	39 f4       	brne	.+14     	; 0xa08 <vfprintf+0x4c>
     9fa:	93 fd       	sbrc	r25, 3
     9fc:	85 91       	lpm	r24, Z+
     9fe:	93 ff       	sbrs	r25, 3
     a00:	81 91       	ld	r24, Z+
     a02:	7f 01       	movw	r14, r30
     a04:	85 32       	cpi	r24, 0x25	; 37
     a06:	29 f4       	brne	.+10     	; 0xa12 <vfprintf+0x56>
     a08:	b6 01       	movw	r22, r12
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	0e 94 07 09 	call	0x120e	; 0x120e <fputc>
     a10:	e7 cf       	rjmp	.-50     	; 0x9e0 <vfprintf+0x24>
     a12:	91 2c       	mov	r9, r1
     a14:	21 2c       	mov	r2, r1
     a16:	31 2c       	mov	r3, r1
     a18:	ff e1       	ldi	r31, 0x1F	; 31
     a1a:	f3 15       	cp	r31, r3
     a1c:	d8 f0       	brcs	.+54     	; 0xa54 <vfprintf+0x98>
     a1e:	8b 32       	cpi	r24, 0x2B	; 43
     a20:	79 f0       	breq	.+30     	; 0xa40 <vfprintf+0x84>
     a22:	38 f4       	brcc	.+14     	; 0xa32 <vfprintf+0x76>
     a24:	80 32       	cpi	r24, 0x20	; 32
     a26:	79 f0       	breq	.+30     	; 0xa46 <vfprintf+0x8a>
     a28:	83 32       	cpi	r24, 0x23	; 35
     a2a:	a1 f4       	brne	.+40     	; 0xa54 <vfprintf+0x98>
     a2c:	23 2d       	mov	r18, r3
     a2e:	20 61       	ori	r18, 0x10	; 16
     a30:	1d c0       	rjmp	.+58     	; 0xa6c <vfprintf+0xb0>
     a32:	8d 32       	cpi	r24, 0x2D	; 45
     a34:	61 f0       	breq	.+24     	; 0xa4e <vfprintf+0x92>
     a36:	80 33       	cpi	r24, 0x30	; 48
     a38:	69 f4       	brne	.+26     	; 0xa54 <vfprintf+0x98>
     a3a:	23 2d       	mov	r18, r3
     a3c:	21 60       	ori	r18, 0x01	; 1
     a3e:	16 c0       	rjmp	.+44     	; 0xa6c <vfprintf+0xb0>
     a40:	83 2d       	mov	r24, r3
     a42:	82 60       	ori	r24, 0x02	; 2
     a44:	38 2e       	mov	r3, r24
     a46:	e3 2d       	mov	r30, r3
     a48:	e4 60       	ori	r30, 0x04	; 4
     a4a:	3e 2e       	mov	r3, r30
     a4c:	2a c0       	rjmp	.+84     	; 0xaa2 <vfprintf+0xe6>
     a4e:	f3 2d       	mov	r31, r3
     a50:	f8 60       	ori	r31, 0x08	; 8
     a52:	1d c0       	rjmp	.+58     	; 0xa8e <vfprintf+0xd2>
     a54:	37 fc       	sbrc	r3, 7
     a56:	2d c0       	rjmp	.+90     	; 0xab2 <vfprintf+0xf6>
     a58:	20 ed       	ldi	r18, 0xD0	; 208
     a5a:	28 0f       	add	r18, r24
     a5c:	2a 30       	cpi	r18, 0x0A	; 10
     a5e:	40 f0       	brcs	.+16     	; 0xa70 <vfprintf+0xb4>
     a60:	8e 32       	cpi	r24, 0x2E	; 46
     a62:	b9 f4       	brne	.+46     	; 0xa92 <vfprintf+0xd6>
     a64:	36 fc       	sbrc	r3, 6
     a66:	81 c1       	rjmp	.+770    	; 0xd6a <vfprintf+0x3ae>
     a68:	23 2d       	mov	r18, r3
     a6a:	20 64       	ori	r18, 0x40	; 64
     a6c:	32 2e       	mov	r3, r18
     a6e:	19 c0       	rjmp	.+50     	; 0xaa2 <vfprintf+0xe6>
     a70:	36 fe       	sbrs	r3, 6
     a72:	06 c0       	rjmp	.+12     	; 0xa80 <vfprintf+0xc4>
     a74:	8a e0       	ldi	r24, 0x0A	; 10
     a76:	98 9e       	mul	r9, r24
     a78:	20 0d       	add	r18, r0
     a7a:	11 24       	eor	r1, r1
     a7c:	92 2e       	mov	r9, r18
     a7e:	11 c0       	rjmp	.+34     	; 0xaa2 <vfprintf+0xe6>
     a80:	ea e0       	ldi	r30, 0x0A	; 10
     a82:	2e 9e       	mul	r2, r30
     a84:	20 0d       	add	r18, r0
     a86:	11 24       	eor	r1, r1
     a88:	22 2e       	mov	r2, r18
     a8a:	f3 2d       	mov	r31, r3
     a8c:	f0 62       	ori	r31, 0x20	; 32
     a8e:	3f 2e       	mov	r3, r31
     a90:	08 c0       	rjmp	.+16     	; 0xaa2 <vfprintf+0xe6>
     a92:	8c 36       	cpi	r24, 0x6C	; 108
     a94:	21 f4       	brne	.+8      	; 0xa9e <vfprintf+0xe2>
     a96:	83 2d       	mov	r24, r3
     a98:	80 68       	ori	r24, 0x80	; 128
     a9a:	38 2e       	mov	r3, r24
     a9c:	02 c0       	rjmp	.+4      	; 0xaa2 <vfprintf+0xe6>
     a9e:	88 36       	cpi	r24, 0x68	; 104
     aa0:	41 f4       	brne	.+16     	; 0xab2 <vfprintf+0xf6>
     aa2:	f7 01       	movw	r30, r14
     aa4:	93 fd       	sbrc	r25, 3
     aa6:	85 91       	lpm	r24, Z+
     aa8:	93 ff       	sbrs	r25, 3
     aaa:	81 91       	ld	r24, Z+
     aac:	7f 01       	movw	r14, r30
     aae:	81 11       	cpse	r24, r1
     ab0:	b3 cf       	rjmp	.-154    	; 0xa18 <vfprintf+0x5c>
     ab2:	98 2f       	mov	r25, r24
     ab4:	9f 7d       	andi	r25, 0xDF	; 223
     ab6:	95 54       	subi	r25, 0x45	; 69
     ab8:	93 30       	cpi	r25, 0x03	; 3
     aba:	28 f4       	brcc	.+10     	; 0xac6 <vfprintf+0x10a>
     abc:	0c 5f       	subi	r16, 0xFC	; 252
     abe:	1f 4f       	sbci	r17, 0xFF	; 255
     ac0:	9f e3       	ldi	r25, 0x3F	; 63
     ac2:	99 83       	std	Y+1, r25	; 0x01
     ac4:	0d c0       	rjmp	.+26     	; 0xae0 <vfprintf+0x124>
     ac6:	83 36       	cpi	r24, 0x63	; 99
     ac8:	31 f0       	breq	.+12     	; 0xad6 <vfprintf+0x11a>
     aca:	83 37       	cpi	r24, 0x73	; 115
     acc:	71 f0       	breq	.+28     	; 0xaea <vfprintf+0x12e>
     ace:	83 35       	cpi	r24, 0x53	; 83
     ad0:	09 f0       	breq	.+2      	; 0xad4 <vfprintf+0x118>
     ad2:	59 c0       	rjmp	.+178    	; 0xb86 <vfprintf+0x1ca>
     ad4:	21 c0       	rjmp	.+66     	; 0xb18 <vfprintf+0x15c>
     ad6:	f8 01       	movw	r30, r16
     ad8:	80 81       	ld	r24, Z
     ada:	89 83       	std	Y+1, r24	; 0x01
     adc:	0e 5f       	subi	r16, 0xFE	; 254
     ade:	1f 4f       	sbci	r17, 0xFF	; 255
     ae0:	88 24       	eor	r8, r8
     ae2:	83 94       	inc	r8
     ae4:	91 2c       	mov	r9, r1
     ae6:	53 01       	movw	r10, r6
     ae8:	13 c0       	rjmp	.+38     	; 0xb10 <vfprintf+0x154>
     aea:	28 01       	movw	r4, r16
     aec:	f2 e0       	ldi	r31, 0x02	; 2
     aee:	4f 0e       	add	r4, r31
     af0:	51 1c       	adc	r5, r1
     af2:	f8 01       	movw	r30, r16
     af4:	a0 80       	ld	r10, Z
     af6:	b1 80       	ldd	r11, Z+1	; 0x01
     af8:	36 fe       	sbrs	r3, 6
     afa:	03 c0       	rjmp	.+6      	; 0xb02 <vfprintf+0x146>
     afc:	69 2d       	mov	r22, r9
     afe:	70 e0       	ldi	r23, 0x00	; 0
     b00:	02 c0       	rjmp	.+4      	; 0xb06 <vfprintf+0x14a>
     b02:	6f ef       	ldi	r22, 0xFF	; 255
     b04:	7f ef       	ldi	r23, 0xFF	; 255
     b06:	c5 01       	movw	r24, r10
     b08:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <strnlen>
     b0c:	4c 01       	movw	r8, r24
     b0e:	82 01       	movw	r16, r4
     b10:	f3 2d       	mov	r31, r3
     b12:	ff 77       	andi	r31, 0x7F	; 127
     b14:	3f 2e       	mov	r3, r31
     b16:	16 c0       	rjmp	.+44     	; 0xb44 <vfprintf+0x188>
     b18:	28 01       	movw	r4, r16
     b1a:	22 e0       	ldi	r18, 0x02	; 2
     b1c:	42 0e       	add	r4, r18
     b1e:	51 1c       	adc	r5, r1
     b20:	f8 01       	movw	r30, r16
     b22:	a0 80       	ld	r10, Z
     b24:	b1 80       	ldd	r11, Z+1	; 0x01
     b26:	36 fe       	sbrs	r3, 6
     b28:	03 c0       	rjmp	.+6      	; 0xb30 <vfprintf+0x174>
     b2a:	69 2d       	mov	r22, r9
     b2c:	70 e0       	ldi	r23, 0x00	; 0
     b2e:	02 c0       	rjmp	.+4      	; 0xb34 <vfprintf+0x178>
     b30:	6f ef       	ldi	r22, 0xFF	; 255
     b32:	7f ef       	ldi	r23, 0xFF	; 255
     b34:	c5 01       	movw	r24, r10
     b36:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <strnlen_P>
     b3a:	4c 01       	movw	r8, r24
     b3c:	f3 2d       	mov	r31, r3
     b3e:	f0 68       	ori	r31, 0x80	; 128
     b40:	3f 2e       	mov	r3, r31
     b42:	82 01       	movw	r16, r4
     b44:	33 fc       	sbrc	r3, 3
     b46:	1b c0       	rjmp	.+54     	; 0xb7e <vfprintf+0x1c2>
     b48:	82 2d       	mov	r24, r2
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	88 16       	cp	r8, r24
     b4e:	99 06       	cpc	r9, r25
     b50:	b0 f4       	brcc	.+44     	; 0xb7e <vfprintf+0x1c2>
     b52:	b6 01       	movw	r22, r12
     b54:	80 e2       	ldi	r24, 0x20	; 32
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	0e 94 07 09 	call	0x120e	; 0x120e <fputc>
     b5c:	2a 94       	dec	r2
     b5e:	f4 cf       	rjmp	.-24     	; 0xb48 <vfprintf+0x18c>
     b60:	f5 01       	movw	r30, r10
     b62:	37 fc       	sbrc	r3, 7
     b64:	85 91       	lpm	r24, Z+
     b66:	37 fe       	sbrs	r3, 7
     b68:	81 91       	ld	r24, Z+
     b6a:	5f 01       	movw	r10, r30
     b6c:	b6 01       	movw	r22, r12
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	0e 94 07 09 	call	0x120e	; 0x120e <fputc>
     b74:	21 10       	cpse	r2, r1
     b76:	2a 94       	dec	r2
     b78:	21 e0       	ldi	r18, 0x01	; 1
     b7a:	82 1a       	sub	r8, r18
     b7c:	91 08       	sbc	r9, r1
     b7e:	81 14       	cp	r8, r1
     b80:	91 04       	cpc	r9, r1
     b82:	71 f7       	brne	.-36     	; 0xb60 <vfprintf+0x1a4>
     b84:	e8 c0       	rjmp	.+464    	; 0xd56 <vfprintf+0x39a>
     b86:	84 36       	cpi	r24, 0x64	; 100
     b88:	11 f0       	breq	.+4      	; 0xb8e <vfprintf+0x1d2>
     b8a:	89 36       	cpi	r24, 0x69	; 105
     b8c:	41 f5       	brne	.+80     	; 0xbde <vfprintf+0x222>
     b8e:	f8 01       	movw	r30, r16
     b90:	37 fe       	sbrs	r3, 7
     b92:	07 c0       	rjmp	.+14     	; 0xba2 <vfprintf+0x1e6>
     b94:	60 81       	ld	r22, Z
     b96:	71 81       	ldd	r23, Z+1	; 0x01
     b98:	82 81       	ldd	r24, Z+2	; 0x02
     b9a:	93 81       	ldd	r25, Z+3	; 0x03
     b9c:	0c 5f       	subi	r16, 0xFC	; 252
     b9e:	1f 4f       	sbci	r17, 0xFF	; 255
     ba0:	08 c0       	rjmp	.+16     	; 0xbb2 <vfprintf+0x1f6>
     ba2:	60 81       	ld	r22, Z
     ba4:	71 81       	ldd	r23, Z+1	; 0x01
     ba6:	07 2e       	mov	r0, r23
     ba8:	00 0c       	add	r0, r0
     baa:	88 0b       	sbc	r24, r24
     bac:	99 0b       	sbc	r25, r25
     bae:	0e 5f       	subi	r16, 0xFE	; 254
     bb0:	1f 4f       	sbci	r17, 0xFF	; 255
     bb2:	f3 2d       	mov	r31, r3
     bb4:	ff 76       	andi	r31, 0x6F	; 111
     bb6:	3f 2e       	mov	r3, r31
     bb8:	97 ff       	sbrs	r25, 7
     bba:	09 c0       	rjmp	.+18     	; 0xbce <vfprintf+0x212>
     bbc:	90 95       	com	r25
     bbe:	80 95       	com	r24
     bc0:	70 95       	com	r23
     bc2:	61 95       	neg	r22
     bc4:	7f 4f       	sbci	r23, 0xFF	; 255
     bc6:	8f 4f       	sbci	r24, 0xFF	; 255
     bc8:	9f 4f       	sbci	r25, 0xFF	; 255
     bca:	f0 68       	ori	r31, 0x80	; 128
     bcc:	3f 2e       	mov	r3, r31
     bce:	2a e0       	ldi	r18, 0x0A	; 10
     bd0:	30 e0       	ldi	r19, 0x00	; 0
     bd2:	a3 01       	movw	r20, r6
     bd4:	0e 94 43 09 	call	0x1286	; 0x1286 <__ultoa_invert>
     bd8:	88 2e       	mov	r8, r24
     bda:	86 18       	sub	r8, r6
     bdc:	45 c0       	rjmp	.+138    	; 0xc68 <vfprintf+0x2ac>
     bde:	85 37       	cpi	r24, 0x75	; 117
     be0:	31 f4       	brne	.+12     	; 0xbee <vfprintf+0x232>
     be2:	23 2d       	mov	r18, r3
     be4:	2f 7e       	andi	r18, 0xEF	; 239
     be6:	b2 2e       	mov	r11, r18
     be8:	2a e0       	ldi	r18, 0x0A	; 10
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	25 c0       	rjmp	.+74     	; 0xc38 <vfprintf+0x27c>
     bee:	93 2d       	mov	r25, r3
     bf0:	99 7f       	andi	r25, 0xF9	; 249
     bf2:	b9 2e       	mov	r11, r25
     bf4:	8f 36       	cpi	r24, 0x6F	; 111
     bf6:	c1 f0       	breq	.+48     	; 0xc28 <vfprintf+0x26c>
     bf8:	18 f4       	brcc	.+6      	; 0xc00 <vfprintf+0x244>
     bfa:	88 35       	cpi	r24, 0x58	; 88
     bfc:	79 f0       	breq	.+30     	; 0xc1c <vfprintf+0x260>
     bfe:	b5 c0       	rjmp	.+362    	; 0xd6a <vfprintf+0x3ae>
     c00:	80 37       	cpi	r24, 0x70	; 112
     c02:	19 f0       	breq	.+6      	; 0xc0a <vfprintf+0x24e>
     c04:	88 37       	cpi	r24, 0x78	; 120
     c06:	21 f0       	breq	.+8      	; 0xc10 <vfprintf+0x254>
     c08:	b0 c0       	rjmp	.+352    	; 0xd6a <vfprintf+0x3ae>
     c0a:	e9 2f       	mov	r30, r25
     c0c:	e0 61       	ori	r30, 0x10	; 16
     c0e:	be 2e       	mov	r11, r30
     c10:	b4 fe       	sbrs	r11, 4
     c12:	0d c0       	rjmp	.+26     	; 0xc2e <vfprintf+0x272>
     c14:	fb 2d       	mov	r31, r11
     c16:	f4 60       	ori	r31, 0x04	; 4
     c18:	bf 2e       	mov	r11, r31
     c1a:	09 c0       	rjmp	.+18     	; 0xc2e <vfprintf+0x272>
     c1c:	34 fe       	sbrs	r3, 4
     c1e:	0a c0       	rjmp	.+20     	; 0xc34 <vfprintf+0x278>
     c20:	29 2f       	mov	r18, r25
     c22:	26 60       	ori	r18, 0x06	; 6
     c24:	b2 2e       	mov	r11, r18
     c26:	06 c0       	rjmp	.+12     	; 0xc34 <vfprintf+0x278>
     c28:	28 e0       	ldi	r18, 0x08	; 8
     c2a:	30 e0       	ldi	r19, 0x00	; 0
     c2c:	05 c0       	rjmp	.+10     	; 0xc38 <vfprintf+0x27c>
     c2e:	20 e1       	ldi	r18, 0x10	; 16
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	02 c0       	rjmp	.+4      	; 0xc38 <vfprintf+0x27c>
     c34:	20 e1       	ldi	r18, 0x10	; 16
     c36:	32 e0       	ldi	r19, 0x02	; 2
     c38:	f8 01       	movw	r30, r16
     c3a:	b7 fe       	sbrs	r11, 7
     c3c:	07 c0       	rjmp	.+14     	; 0xc4c <vfprintf+0x290>
     c3e:	60 81       	ld	r22, Z
     c40:	71 81       	ldd	r23, Z+1	; 0x01
     c42:	82 81       	ldd	r24, Z+2	; 0x02
     c44:	93 81       	ldd	r25, Z+3	; 0x03
     c46:	0c 5f       	subi	r16, 0xFC	; 252
     c48:	1f 4f       	sbci	r17, 0xFF	; 255
     c4a:	06 c0       	rjmp	.+12     	; 0xc58 <vfprintf+0x29c>
     c4c:	60 81       	ld	r22, Z
     c4e:	71 81       	ldd	r23, Z+1	; 0x01
     c50:	80 e0       	ldi	r24, 0x00	; 0
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	0e 5f       	subi	r16, 0xFE	; 254
     c56:	1f 4f       	sbci	r17, 0xFF	; 255
     c58:	a3 01       	movw	r20, r6
     c5a:	0e 94 43 09 	call	0x1286	; 0x1286 <__ultoa_invert>
     c5e:	88 2e       	mov	r8, r24
     c60:	86 18       	sub	r8, r6
     c62:	fb 2d       	mov	r31, r11
     c64:	ff 77       	andi	r31, 0x7F	; 127
     c66:	3f 2e       	mov	r3, r31
     c68:	36 fe       	sbrs	r3, 6
     c6a:	0d c0       	rjmp	.+26     	; 0xc86 <vfprintf+0x2ca>
     c6c:	23 2d       	mov	r18, r3
     c6e:	2e 7f       	andi	r18, 0xFE	; 254
     c70:	a2 2e       	mov	r10, r18
     c72:	89 14       	cp	r8, r9
     c74:	58 f4       	brcc	.+22     	; 0xc8c <vfprintf+0x2d0>
     c76:	34 fe       	sbrs	r3, 4
     c78:	0b c0       	rjmp	.+22     	; 0xc90 <vfprintf+0x2d4>
     c7a:	32 fc       	sbrc	r3, 2
     c7c:	09 c0       	rjmp	.+18     	; 0xc90 <vfprintf+0x2d4>
     c7e:	83 2d       	mov	r24, r3
     c80:	8e 7e       	andi	r24, 0xEE	; 238
     c82:	a8 2e       	mov	r10, r24
     c84:	05 c0       	rjmp	.+10     	; 0xc90 <vfprintf+0x2d4>
     c86:	b8 2c       	mov	r11, r8
     c88:	a3 2c       	mov	r10, r3
     c8a:	03 c0       	rjmp	.+6      	; 0xc92 <vfprintf+0x2d6>
     c8c:	b8 2c       	mov	r11, r8
     c8e:	01 c0       	rjmp	.+2      	; 0xc92 <vfprintf+0x2d6>
     c90:	b9 2c       	mov	r11, r9
     c92:	a4 fe       	sbrs	r10, 4
     c94:	0f c0       	rjmp	.+30     	; 0xcb4 <vfprintf+0x2f8>
     c96:	fe 01       	movw	r30, r28
     c98:	e8 0d       	add	r30, r8
     c9a:	f1 1d       	adc	r31, r1
     c9c:	80 81       	ld	r24, Z
     c9e:	80 33       	cpi	r24, 0x30	; 48
     ca0:	21 f4       	brne	.+8      	; 0xcaa <vfprintf+0x2ee>
     ca2:	9a 2d       	mov	r25, r10
     ca4:	99 7e       	andi	r25, 0xE9	; 233
     ca6:	a9 2e       	mov	r10, r25
     ca8:	09 c0       	rjmp	.+18     	; 0xcbc <vfprintf+0x300>
     caa:	a2 fe       	sbrs	r10, 2
     cac:	06 c0       	rjmp	.+12     	; 0xcba <vfprintf+0x2fe>
     cae:	b3 94       	inc	r11
     cb0:	b3 94       	inc	r11
     cb2:	04 c0       	rjmp	.+8      	; 0xcbc <vfprintf+0x300>
     cb4:	8a 2d       	mov	r24, r10
     cb6:	86 78       	andi	r24, 0x86	; 134
     cb8:	09 f0       	breq	.+2      	; 0xcbc <vfprintf+0x300>
     cba:	b3 94       	inc	r11
     cbc:	a3 fc       	sbrc	r10, 3
     cbe:	11 c0       	rjmp	.+34     	; 0xce2 <vfprintf+0x326>
     cc0:	a0 fe       	sbrs	r10, 0
     cc2:	06 c0       	rjmp	.+12     	; 0xcd0 <vfprintf+0x314>
     cc4:	b2 14       	cp	r11, r2
     cc6:	88 f4       	brcc	.+34     	; 0xcea <vfprintf+0x32e>
     cc8:	28 0c       	add	r2, r8
     cca:	92 2c       	mov	r9, r2
     ccc:	9b 18       	sub	r9, r11
     cce:	0e c0       	rjmp	.+28     	; 0xcec <vfprintf+0x330>
     cd0:	b2 14       	cp	r11, r2
     cd2:	60 f4       	brcc	.+24     	; 0xcec <vfprintf+0x330>
     cd4:	b6 01       	movw	r22, r12
     cd6:	80 e2       	ldi	r24, 0x20	; 32
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	0e 94 07 09 	call	0x120e	; 0x120e <fputc>
     cde:	b3 94       	inc	r11
     ce0:	f7 cf       	rjmp	.-18     	; 0xcd0 <vfprintf+0x314>
     ce2:	b2 14       	cp	r11, r2
     ce4:	18 f4       	brcc	.+6      	; 0xcec <vfprintf+0x330>
     ce6:	2b 18       	sub	r2, r11
     ce8:	02 c0       	rjmp	.+4      	; 0xcee <vfprintf+0x332>
     cea:	98 2c       	mov	r9, r8
     cec:	21 2c       	mov	r2, r1
     cee:	a4 fe       	sbrs	r10, 4
     cf0:	10 c0       	rjmp	.+32     	; 0xd12 <vfprintf+0x356>
     cf2:	b6 01       	movw	r22, r12
     cf4:	80 e3       	ldi	r24, 0x30	; 48
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	0e 94 07 09 	call	0x120e	; 0x120e <fputc>
     cfc:	a2 fe       	sbrs	r10, 2
     cfe:	17 c0       	rjmp	.+46     	; 0xd2e <vfprintf+0x372>
     d00:	a1 fc       	sbrc	r10, 1
     d02:	03 c0       	rjmp	.+6      	; 0xd0a <vfprintf+0x34e>
     d04:	88 e7       	ldi	r24, 0x78	; 120
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	02 c0       	rjmp	.+4      	; 0xd0e <vfprintf+0x352>
     d0a:	88 e5       	ldi	r24, 0x58	; 88
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	b6 01       	movw	r22, r12
     d10:	0c c0       	rjmp	.+24     	; 0xd2a <vfprintf+0x36e>
     d12:	8a 2d       	mov	r24, r10
     d14:	86 78       	andi	r24, 0x86	; 134
     d16:	59 f0       	breq	.+22     	; 0xd2e <vfprintf+0x372>
     d18:	a1 fe       	sbrs	r10, 1
     d1a:	02 c0       	rjmp	.+4      	; 0xd20 <vfprintf+0x364>
     d1c:	8b e2       	ldi	r24, 0x2B	; 43
     d1e:	01 c0       	rjmp	.+2      	; 0xd22 <vfprintf+0x366>
     d20:	80 e2       	ldi	r24, 0x20	; 32
     d22:	a7 fc       	sbrc	r10, 7
     d24:	8d e2       	ldi	r24, 0x2D	; 45
     d26:	b6 01       	movw	r22, r12
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	0e 94 07 09 	call	0x120e	; 0x120e <fputc>
     d2e:	89 14       	cp	r8, r9
     d30:	38 f4       	brcc	.+14     	; 0xd40 <vfprintf+0x384>
     d32:	b6 01       	movw	r22, r12
     d34:	80 e3       	ldi	r24, 0x30	; 48
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	0e 94 07 09 	call	0x120e	; 0x120e <fputc>
     d3c:	9a 94       	dec	r9
     d3e:	f7 cf       	rjmp	.-18     	; 0xd2e <vfprintf+0x372>
     d40:	8a 94       	dec	r8
     d42:	f3 01       	movw	r30, r6
     d44:	e8 0d       	add	r30, r8
     d46:	f1 1d       	adc	r31, r1
     d48:	80 81       	ld	r24, Z
     d4a:	b6 01       	movw	r22, r12
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	0e 94 07 09 	call	0x120e	; 0x120e <fputc>
     d52:	81 10       	cpse	r8, r1
     d54:	f5 cf       	rjmp	.-22     	; 0xd40 <vfprintf+0x384>
     d56:	22 20       	and	r2, r2
     d58:	09 f4       	brne	.+2      	; 0xd5c <vfprintf+0x3a0>
     d5a:	42 ce       	rjmp	.-892    	; 0x9e0 <vfprintf+0x24>
     d5c:	b6 01       	movw	r22, r12
     d5e:	80 e2       	ldi	r24, 0x20	; 32
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	0e 94 07 09 	call	0x120e	; 0x120e <fputc>
     d66:	2a 94       	dec	r2
     d68:	f6 cf       	rjmp	.-20     	; 0xd56 <vfprintf+0x39a>
     d6a:	f6 01       	movw	r30, r12
     d6c:	86 81       	ldd	r24, Z+6	; 0x06
     d6e:	97 81       	ldd	r25, Z+7	; 0x07
     d70:	02 c0       	rjmp	.+4      	; 0xd76 <vfprintf+0x3ba>
     d72:	8f ef       	ldi	r24, 0xFF	; 255
     d74:	9f ef       	ldi	r25, 0xFF	; 255
     d76:	2b 96       	adiw	r28, 0x0b	; 11
     d78:	e2 e1       	ldi	r30, 0x12	; 18
     d7a:	0c 94 bd 09 	jmp	0x137a	; 0x137a <__epilogue_restores__>

00000d7e <dtoa_prf>:
     d7e:	a9 e0       	ldi	r26, 0x09	; 9
     d80:	b0 e0       	ldi	r27, 0x00	; 0
     d82:	e5 ec       	ldi	r30, 0xC5	; 197
     d84:	f6 e0       	ldi	r31, 0x06	; 6
     d86:	0c 94 a7 09 	jmp	0x134e	; 0x134e <__prologue_saves__+0xc>
     d8a:	6a 01       	movw	r12, r20
     d8c:	12 2f       	mov	r17, r18
     d8e:	b0 2e       	mov	r11, r16
     d90:	2b e3       	ldi	r18, 0x3B	; 59
     d92:	20 17       	cp	r18, r16
     d94:	20 f0       	brcs	.+8      	; 0xd9e <dtoa_prf+0x20>
     d96:	ff 24       	eor	r15, r15
     d98:	f3 94       	inc	r15
     d9a:	f0 0e       	add	r15, r16
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <dtoa_prf+0x24>
     d9e:	2c e3       	ldi	r18, 0x3C	; 60
     da0:	f2 2e       	mov	r15, r18
     da2:	0f 2d       	mov	r16, r15
     da4:	27 e0       	ldi	r18, 0x07	; 7
     da6:	ae 01       	movw	r20, r28
     da8:	4f 5f       	subi	r20, 0xFF	; 255
     daa:	5f 4f       	sbci	r21, 0xFF	; 255
     dac:	0e 94 19 08 	call	0x1032	; 0x1032 <__ftoa_engine>
     db0:	bc 01       	movw	r22, r24
     db2:	49 81       	ldd	r20, Y+1	; 0x01
     db4:	84 2f       	mov	r24, r20
     db6:	89 70       	andi	r24, 0x09	; 9
     db8:	81 30       	cpi	r24, 0x01	; 1
     dba:	31 f0       	breq	.+12     	; 0xdc8 <dtoa_prf+0x4a>
     dbc:	e1 fc       	sbrc	r14, 1
     dbe:	06 c0       	rjmp	.+12     	; 0xdcc <dtoa_prf+0x4e>
     dc0:	e0 fe       	sbrs	r14, 0
     dc2:	06 c0       	rjmp	.+12     	; 0xdd0 <dtoa_prf+0x52>
     dc4:	90 e2       	ldi	r25, 0x20	; 32
     dc6:	05 c0       	rjmp	.+10     	; 0xdd2 <dtoa_prf+0x54>
     dc8:	9d e2       	ldi	r25, 0x2D	; 45
     dca:	03 c0       	rjmp	.+6      	; 0xdd2 <dtoa_prf+0x54>
     dcc:	9b e2       	ldi	r25, 0x2B	; 43
     dce:	01 c0       	rjmp	.+2      	; 0xdd2 <dtoa_prf+0x54>
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	5e 2d       	mov	r21, r14
     dd4:	50 71       	andi	r21, 0x10	; 16
     dd6:	43 ff       	sbrs	r20, 3
     dd8:	3c c0       	rjmp	.+120    	; 0xe52 <dtoa_prf+0xd4>
     dda:	91 11       	cpse	r25, r1
     ddc:	02 c0       	rjmp	.+4      	; 0xde2 <dtoa_prf+0x64>
     dde:	83 e0       	ldi	r24, 0x03	; 3
     de0:	01 c0       	rjmp	.+2      	; 0xde4 <dtoa_prf+0x66>
     de2:	84 e0       	ldi	r24, 0x04	; 4
     de4:	81 17       	cp	r24, r17
     de6:	18 f4       	brcc	.+6      	; 0xdee <dtoa_prf+0x70>
     de8:	21 2f       	mov	r18, r17
     dea:	28 1b       	sub	r18, r24
     dec:	01 c0       	rjmp	.+2      	; 0xdf0 <dtoa_prf+0x72>
     dee:	20 e0       	ldi	r18, 0x00	; 0
     df0:	51 11       	cpse	r21, r1
     df2:	0b c0       	rjmp	.+22     	; 0xe0a <dtoa_prf+0x8c>
     df4:	f6 01       	movw	r30, r12
     df6:	82 2f       	mov	r24, r18
     df8:	30 e2       	ldi	r19, 0x20	; 32
     dfa:	88 23       	and	r24, r24
     dfc:	19 f0       	breq	.+6      	; 0xe04 <dtoa_prf+0x86>
     dfe:	31 93       	st	Z+, r19
     e00:	81 50       	subi	r24, 0x01	; 1
     e02:	fb cf       	rjmp	.-10     	; 0xdfa <dtoa_prf+0x7c>
     e04:	c2 0e       	add	r12, r18
     e06:	d1 1c       	adc	r13, r1
     e08:	20 e0       	ldi	r18, 0x00	; 0
     e0a:	99 23       	and	r25, r25
     e0c:	29 f0       	breq	.+10     	; 0xe18 <dtoa_prf+0x9a>
     e0e:	d6 01       	movw	r26, r12
     e10:	9c 93       	st	X, r25
     e12:	f6 01       	movw	r30, r12
     e14:	31 96       	adiw	r30, 0x01	; 1
     e16:	6f 01       	movw	r12, r30
     e18:	c6 01       	movw	r24, r12
     e1a:	03 96       	adiw	r24, 0x03	; 3
     e1c:	e2 fe       	sbrs	r14, 2
     e1e:	0a c0       	rjmp	.+20     	; 0xe34 <dtoa_prf+0xb6>
     e20:	3e e4       	ldi	r19, 0x4E	; 78
     e22:	d6 01       	movw	r26, r12
     e24:	3c 93       	st	X, r19
     e26:	41 e4       	ldi	r20, 0x41	; 65
     e28:	11 96       	adiw	r26, 0x01	; 1
     e2a:	4c 93       	st	X, r20
     e2c:	11 97       	sbiw	r26, 0x01	; 1
     e2e:	12 96       	adiw	r26, 0x02	; 2
     e30:	3c 93       	st	X, r19
     e32:	06 c0       	rjmp	.+12     	; 0xe40 <dtoa_prf+0xc2>
     e34:	3e e6       	ldi	r19, 0x6E	; 110
     e36:	f6 01       	movw	r30, r12
     e38:	30 83       	st	Z, r19
     e3a:	41 e6       	ldi	r20, 0x61	; 97
     e3c:	41 83       	std	Z+1, r20	; 0x01
     e3e:	32 83       	std	Z+2, r19	; 0x02
     e40:	fc 01       	movw	r30, r24
     e42:	32 2f       	mov	r19, r18
     e44:	40 e2       	ldi	r20, 0x20	; 32
     e46:	33 23       	and	r19, r19
     e48:	09 f4       	brne	.+2      	; 0xe4c <dtoa_prf+0xce>
     e4a:	42 c0       	rjmp	.+132    	; 0xed0 <dtoa_prf+0x152>
     e4c:	41 93       	st	Z+, r20
     e4e:	31 50       	subi	r19, 0x01	; 1
     e50:	fa cf       	rjmp	.-12     	; 0xe46 <dtoa_prf+0xc8>
     e52:	42 ff       	sbrs	r20, 2
     e54:	44 c0       	rjmp	.+136    	; 0xede <dtoa_prf+0x160>
     e56:	91 11       	cpse	r25, r1
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <dtoa_prf+0xe0>
     e5a:	83 e0       	ldi	r24, 0x03	; 3
     e5c:	01 c0       	rjmp	.+2      	; 0xe60 <dtoa_prf+0xe2>
     e5e:	84 e0       	ldi	r24, 0x04	; 4
     e60:	81 17       	cp	r24, r17
     e62:	18 f4       	brcc	.+6      	; 0xe6a <dtoa_prf+0xec>
     e64:	21 2f       	mov	r18, r17
     e66:	28 1b       	sub	r18, r24
     e68:	01 c0       	rjmp	.+2      	; 0xe6c <dtoa_prf+0xee>
     e6a:	20 e0       	ldi	r18, 0x00	; 0
     e6c:	51 11       	cpse	r21, r1
     e6e:	0b c0       	rjmp	.+22     	; 0xe86 <dtoa_prf+0x108>
     e70:	f6 01       	movw	r30, r12
     e72:	82 2f       	mov	r24, r18
     e74:	30 e2       	ldi	r19, 0x20	; 32
     e76:	88 23       	and	r24, r24
     e78:	19 f0       	breq	.+6      	; 0xe80 <dtoa_prf+0x102>
     e7a:	31 93       	st	Z+, r19
     e7c:	81 50       	subi	r24, 0x01	; 1
     e7e:	fb cf       	rjmp	.-10     	; 0xe76 <dtoa_prf+0xf8>
     e80:	c2 0e       	add	r12, r18
     e82:	d1 1c       	adc	r13, r1
     e84:	20 e0       	ldi	r18, 0x00	; 0
     e86:	99 23       	and	r25, r25
     e88:	29 f0       	breq	.+10     	; 0xe94 <dtoa_prf+0x116>
     e8a:	d6 01       	movw	r26, r12
     e8c:	9c 93       	st	X, r25
     e8e:	f6 01       	movw	r30, r12
     e90:	31 96       	adiw	r30, 0x01	; 1
     e92:	6f 01       	movw	r12, r30
     e94:	c6 01       	movw	r24, r12
     e96:	03 96       	adiw	r24, 0x03	; 3
     e98:	e2 fe       	sbrs	r14, 2
     e9a:	0b c0       	rjmp	.+22     	; 0xeb2 <dtoa_prf+0x134>
     e9c:	39 e4       	ldi	r19, 0x49	; 73
     e9e:	d6 01       	movw	r26, r12
     ea0:	3c 93       	st	X, r19
     ea2:	3e e4       	ldi	r19, 0x4E	; 78
     ea4:	11 96       	adiw	r26, 0x01	; 1
     ea6:	3c 93       	st	X, r19
     ea8:	11 97       	sbiw	r26, 0x01	; 1
     eaa:	36 e4       	ldi	r19, 0x46	; 70
     eac:	12 96       	adiw	r26, 0x02	; 2
     eae:	3c 93       	st	X, r19
     eb0:	07 c0       	rjmp	.+14     	; 0xec0 <dtoa_prf+0x142>
     eb2:	39 e6       	ldi	r19, 0x69	; 105
     eb4:	f6 01       	movw	r30, r12
     eb6:	30 83       	st	Z, r19
     eb8:	3e e6       	ldi	r19, 0x6E	; 110
     eba:	31 83       	std	Z+1, r19	; 0x01
     ebc:	36 e6       	ldi	r19, 0x66	; 102
     ebe:	32 83       	std	Z+2, r19	; 0x02
     ec0:	fc 01       	movw	r30, r24
     ec2:	32 2f       	mov	r19, r18
     ec4:	40 e2       	ldi	r20, 0x20	; 32
     ec6:	33 23       	and	r19, r19
     ec8:	19 f0       	breq	.+6      	; 0xed0 <dtoa_prf+0x152>
     eca:	41 93       	st	Z+, r20
     ecc:	31 50       	subi	r19, 0x01	; 1
     ece:	fb cf       	rjmp	.-10     	; 0xec6 <dtoa_prf+0x148>
     ed0:	fc 01       	movw	r30, r24
     ed2:	e2 0f       	add	r30, r18
     ed4:	f1 1d       	adc	r31, r1
     ed6:	10 82       	st	Z, r1
     ed8:	8e ef       	ldi	r24, 0xFE	; 254
     eda:	9f ef       	ldi	r25, 0xFF	; 255
     edc:	a6 c0       	rjmp	.+332    	; 0x102a <dtoa_prf+0x2ac>
     ede:	21 e0       	ldi	r18, 0x01	; 1
     ee0:	30 e0       	ldi	r19, 0x00	; 0
     ee2:	91 11       	cpse	r25, r1
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <dtoa_prf+0x16c>
     ee6:	20 e0       	ldi	r18, 0x00	; 0
     ee8:	30 e0       	ldi	r19, 0x00	; 0
     eea:	16 16       	cp	r1, r22
     eec:	17 06       	cpc	r1, r23
     eee:	1c f4       	brge	.+6      	; 0xef6 <dtoa_prf+0x178>
     ef0:	fb 01       	movw	r30, r22
     ef2:	31 96       	adiw	r30, 0x01	; 1
     ef4:	02 c0       	rjmp	.+4      	; 0xefa <dtoa_prf+0x17c>
     ef6:	e1 e0       	ldi	r30, 0x01	; 1
     ef8:	f0 e0       	ldi	r31, 0x00	; 0
     efa:	2e 0f       	add	r18, r30
     efc:	3f 1f       	adc	r19, r31
     efe:	bb 20       	and	r11, r11
     f00:	21 f0       	breq	.+8      	; 0xf0a <dtoa_prf+0x18c>
     f02:	eb 2d       	mov	r30, r11
     f04:	f0 e0       	ldi	r31, 0x00	; 0
     f06:	31 96       	adiw	r30, 0x01	; 1
     f08:	02 c0       	rjmp	.+4      	; 0xf0e <dtoa_prf+0x190>
     f0a:	e0 e0       	ldi	r30, 0x00	; 0
     f0c:	f0 e0       	ldi	r31, 0x00	; 0
     f0e:	2e 0f       	add	r18, r30
     f10:	3f 1f       	adc	r19, r31
     f12:	e1 2f       	mov	r30, r17
     f14:	f0 e0       	ldi	r31, 0x00	; 0
     f16:	2e 17       	cp	r18, r30
     f18:	3f 07       	cpc	r19, r31
     f1a:	1c f4       	brge	.+6      	; 0xf22 <dtoa_prf+0x1a4>
     f1c:	12 1b       	sub	r17, r18
     f1e:	21 2f       	mov	r18, r17
     f20:	01 c0       	rjmp	.+2      	; 0xf24 <dtoa_prf+0x1a6>
     f22:	20 e0       	ldi	r18, 0x00	; 0
     f24:	8e 2d       	mov	r24, r14
     f26:	88 71       	andi	r24, 0x18	; 24
     f28:	59 f4       	brne	.+22     	; 0xf40 <dtoa_prf+0x1c2>
     f2a:	f6 01       	movw	r30, r12
     f2c:	82 2f       	mov	r24, r18
     f2e:	30 e2       	ldi	r19, 0x20	; 32
     f30:	88 23       	and	r24, r24
     f32:	19 f0       	breq	.+6      	; 0xf3a <dtoa_prf+0x1bc>
     f34:	31 93       	st	Z+, r19
     f36:	81 50       	subi	r24, 0x01	; 1
     f38:	fb cf       	rjmp	.-10     	; 0xf30 <dtoa_prf+0x1b2>
     f3a:	c2 0e       	add	r12, r18
     f3c:	d1 1c       	adc	r13, r1
     f3e:	20 e0       	ldi	r18, 0x00	; 0
     f40:	99 23       	and	r25, r25
     f42:	29 f0       	breq	.+10     	; 0xf4e <dtoa_prf+0x1d0>
     f44:	d6 01       	movw	r26, r12
     f46:	9c 93       	st	X, r25
     f48:	f6 01       	movw	r30, r12
     f4a:	31 96       	adiw	r30, 0x01	; 1
     f4c:	6f 01       	movw	r12, r30
     f4e:	51 11       	cpse	r21, r1
     f50:	0b c0       	rjmp	.+22     	; 0xf68 <dtoa_prf+0x1ea>
     f52:	f6 01       	movw	r30, r12
     f54:	82 2f       	mov	r24, r18
     f56:	90 e3       	ldi	r25, 0x30	; 48
     f58:	88 23       	and	r24, r24
     f5a:	19 f0       	breq	.+6      	; 0xf62 <dtoa_prf+0x1e4>
     f5c:	91 93       	st	Z+, r25
     f5e:	81 50       	subi	r24, 0x01	; 1
     f60:	fb cf       	rjmp	.-10     	; 0xf58 <dtoa_prf+0x1da>
     f62:	c2 0e       	add	r12, r18
     f64:	d1 1c       	adc	r13, r1
     f66:	20 e0       	ldi	r18, 0x00	; 0
     f68:	0f 2d       	mov	r16, r15
     f6a:	06 0f       	add	r16, r22
     f6c:	9a 81       	ldd	r25, Y+2	; 0x02
     f6e:	34 2f       	mov	r19, r20
     f70:	30 71       	andi	r19, 0x10	; 16
     f72:	44 ff       	sbrs	r20, 4
     f74:	03 c0       	rjmp	.+6      	; 0xf7c <dtoa_prf+0x1fe>
     f76:	91 33       	cpi	r25, 0x31	; 49
     f78:	09 f4       	brne	.+2      	; 0xf7c <dtoa_prf+0x1fe>
     f7a:	01 50       	subi	r16, 0x01	; 1
     f7c:	10 16       	cp	r1, r16
     f7e:	24 f4       	brge	.+8      	; 0xf88 <dtoa_prf+0x20a>
     f80:	09 30       	cpi	r16, 0x09	; 9
     f82:	18 f0       	brcs	.+6      	; 0xf8a <dtoa_prf+0x20c>
     f84:	08 e0       	ldi	r16, 0x08	; 8
     f86:	01 c0       	rjmp	.+2      	; 0xf8a <dtoa_prf+0x20c>
     f88:	01 e0       	ldi	r16, 0x01	; 1
     f8a:	ab 01       	movw	r20, r22
     f8c:	77 ff       	sbrs	r23, 7
     f8e:	02 c0       	rjmp	.+4      	; 0xf94 <dtoa_prf+0x216>
     f90:	40 e0       	ldi	r20, 0x00	; 0
     f92:	50 e0       	ldi	r21, 0x00	; 0
     f94:	fb 01       	movw	r30, r22
     f96:	e4 1b       	sub	r30, r20
     f98:	f5 0b       	sbc	r31, r21
     f9a:	a1 e0       	ldi	r26, 0x01	; 1
     f9c:	b0 e0       	ldi	r27, 0x00	; 0
     f9e:	ac 0f       	add	r26, r28
     fa0:	bd 1f       	adc	r27, r29
     fa2:	ea 0f       	add	r30, r26
     fa4:	fb 1f       	adc	r31, r27
     fa6:	8e e2       	ldi	r24, 0x2E	; 46
     fa8:	a8 2e       	mov	r10, r24
     faa:	4b 01       	movw	r8, r22
     fac:	80 1a       	sub	r8, r16
     fae:	91 08       	sbc	r9, r1
     fb0:	0b 2d       	mov	r16, r11
     fb2:	10 e0       	ldi	r17, 0x00	; 0
     fb4:	11 95       	neg	r17
     fb6:	01 95       	neg	r16
     fb8:	11 09       	sbc	r17, r1
     fba:	4f 3f       	cpi	r20, 0xFF	; 255
     fbc:	bf ef       	ldi	r27, 0xFF	; 255
     fbe:	5b 07       	cpc	r21, r27
     fc0:	21 f4       	brne	.+8      	; 0xfca <dtoa_prf+0x24c>
     fc2:	d6 01       	movw	r26, r12
     fc4:	ac 92       	st	X, r10
     fc6:	11 96       	adiw	r26, 0x01	; 1
     fc8:	6d 01       	movw	r12, r26
     fca:	64 17       	cp	r22, r20
     fcc:	75 07       	cpc	r23, r21
     fce:	2c f0       	brlt	.+10     	; 0xfda <dtoa_prf+0x25c>
     fd0:	84 16       	cp	r8, r20
     fd2:	95 06       	cpc	r9, r21
     fd4:	14 f4       	brge	.+4      	; 0xfda <dtoa_prf+0x25c>
     fd6:	81 81       	ldd	r24, Z+1	; 0x01
     fd8:	01 c0       	rjmp	.+2      	; 0xfdc <dtoa_prf+0x25e>
     fda:	80 e3       	ldi	r24, 0x30	; 48
     fdc:	41 50       	subi	r20, 0x01	; 1
     fde:	51 09       	sbc	r21, r1
     fe0:	31 96       	adiw	r30, 0x01	; 1
     fe2:	d6 01       	movw	r26, r12
     fe4:	11 96       	adiw	r26, 0x01	; 1
     fe6:	7d 01       	movw	r14, r26
     fe8:	40 17       	cp	r20, r16
     fea:	51 07       	cpc	r21, r17
     fec:	24 f0       	brlt	.+8      	; 0xff6 <dtoa_prf+0x278>
     fee:	d6 01       	movw	r26, r12
     ff0:	8c 93       	st	X, r24
     ff2:	67 01       	movw	r12, r14
     ff4:	e2 cf       	rjmp	.-60     	; 0xfba <dtoa_prf+0x23c>
     ff6:	64 17       	cp	r22, r20
     ff8:	75 07       	cpc	r23, r21
     ffa:	39 f4       	brne	.+14     	; 0x100a <dtoa_prf+0x28c>
     ffc:	96 33       	cpi	r25, 0x36	; 54
     ffe:	20 f4       	brcc	.+8      	; 0x1008 <dtoa_prf+0x28a>
    1000:	95 33       	cpi	r25, 0x35	; 53
    1002:	19 f4       	brne	.+6      	; 0x100a <dtoa_prf+0x28c>
    1004:	31 11       	cpse	r19, r1
    1006:	01 c0       	rjmp	.+2      	; 0x100a <dtoa_prf+0x28c>
    1008:	81 e3       	ldi	r24, 0x31	; 49
    100a:	f6 01       	movw	r30, r12
    100c:	80 83       	st	Z, r24
    100e:	f7 01       	movw	r30, r14
    1010:	82 2f       	mov	r24, r18
    1012:	90 e2       	ldi	r25, 0x20	; 32
    1014:	88 23       	and	r24, r24
    1016:	19 f0       	breq	.+6      	; 0x101e <dtoa_prf+0x2a0>
    1018:	91 93       	st	Z+, r25
    101a:	81 50       	subi	r24, 0x01	; 1
    101c:	fb cf       	rjmp	.-10     	; 0x1014 <dtoa_prf+0x296>
    101e:	f7 01       	movw	r30, r14
    1020:	e2 0f       	add	r30, r18
    1022:	f1 1d       	adc	r31, r1
    1024:	10 82       	st	Z, r1
    1026:	80 e0       	ldi	r24, 0x00	; 0
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	29 96       	adiw	r28, 0x09	; 9
    102c:	ec e0       	ldi	r30, 0x0C	; 12
    102e:	0c 94 c3 09 	jmp	0x1386	; 0x1386 <__epilogue_restores__+0xc>

00001032 <__ftoa_engine>:
    1032:	28 30       	cpi	r18, 0x08	; 8
    1034:	08 f0       	brcs	.+2      	; 0x1038 <__ftoa_engine+0x6>
    1036:	27 e0       	ldi	r18, 0x07	; 7
    1038:	33 27       	eor	r19, r19
    103a:	da 01       	movw	r26, r20
    103c:	99 0f       	add	r25, r25
    103e:	31 1d       	adc	r19, r1
    1040:	87 fd       	sbrc	r24, 7
    1042:	91 60       	ori	r25, 0x01	; 1
    1044:	00 96       	adiw	r24, 0x00	; 0
    1046:	61 05       	cpc	r22, r1
    1048:	71 05       	cpc	r23, r1
    104a:	39 f4       	brne	.+14     	; 0x105a <__ftoa_engine+0x28>
    104c:	32 60       	ori	r19, 0x02	; 2
    104e:	2e 5f       	subi	r18, 0xFE	; 254
    1050:	3d 93       	st	X+, r19
    1052:	30 e3       	ldi	r19, 0x30	; 48
    1054:	2a 95       	dec	r18
    1056:	e1 f7       	brne	.-8      	; 0x1050 <__ftoa_engine+0x1e>
    1058:	08 95       	ret
    105a:	9f 3f       	cpi	r25, 0xFF	; 255
    105c:	30 f0       	brcs	.+12     	; 0x106a <__ftoa_engine+0x38>
    105e:	80 38       	cpi	r24, 0x80	; 128
    1060:	71 05       	cpc	r23, r1
    1062:	61 05       	cpc	r22, r1
    1064:	09 f0       	breq	.+2      	; 0x1068 <__ftoa_engine+0x36>
    1066:	3c 5f       	subi	r19, 0xFC	; 252
    1068:	3c 5f       	subi	r19, 0xFC	; 252
    106a:	3d 93       	st	X+, r19
    106c:	91 30       	cpi	r25, 0x01	; 1
    106e:	08 f0       	brcs	.+2      	; 0x1072 <__ftoa_engine+0x40>
    1070:	80 68       	ori	r24, 0x80	; 128
    1072:	91 1d       	adc	r25, r1
    1074:	df 93       	push	r29
    1076:	cf 93       	push	r28
    1078:	1f 93       	push	r17
    107a:	0f 93       	push	r16
    107c:	ff 92       	push	r15
    107e:	ef 92       	push	r14
    1080:	19 2f       	mov	r17, r25
    1082:	98 7f       	andi	r25, 0xF8	; 248
    1084:	96 95       	lsr	r25
    1086:	e9 2f       	mov	r30, r25
    1088:	96 95       	lsr	r25
    108a:	96 95       	lsr	r25
    108c:	e9 0f       	add	r30, r25
    108e:	ff 27       	eor	r31, r31
    1090:	ee 53       	subi	r30, 0x3E	; 62
    1092:	ff 4f       	sbci	r31, 0xFF	; 255
    1094:	99 27       	eor	r25, r25
    1096:	33 27       	eor	r19, r19
    1098:	ee 24       	eor	r14, r14
    109a:	ff 24       	eor	r15, r15
    109c:	a7 01       	movw	r20, r14
    109e:	e7 01       	movw	r28, r14
    10a0:	05 90       	lpm	r0, Z+
    10a2:	08 94       	sec
    10a4:	07 94       	ror	r0
    10a6:	28 f4       	brcc	.+10     	; 0x10b2 <__ftoa_engine+0x80>
    10a8:	36 0f       	add	r19, r22
    10aa:	e7 1e       	adc	r14, r23
    10ac:	f8 1e       	adc	r15, r24
    10ae:	49 1f       	adc	r20, r25
    10b0:	51 1d       	adc	r21, r1
    10b2:	66 0f       	add	r22, r22
    10b4:	77 1f       	adc	r23, r23
    10b6:	88 1f       	adc	r24, r24
    10b8:	99 1f       	adc	r25, r25
    10ba:	06 94       	lsr	r0
    10bc:	a1 f7       	brne	.-24     	; 0x10a6 <__ftoa_engine+0x74>
    10be:	05 90       	lpm	r0, Z+
    10c0:	07 94       	ror	r0
    10c2:	28 f4       	brcc	.+10     	; 0x10ce <__ftoa_engine+0x9c>
    10c4:	e7 0e       	add	r14, r23
    10c6:	f8 1e       	adc	r15, r24
    10c8:	49 1f       	adc	r20, r25
    10ca:	56 1f       	adc	r21, r22
    10cc:	c1 1d       	adc	r28, r1
    10ce:	77 0f       	add	r23, r23
    10d0:	88 1f       	adc	r24, r24
    10d2:	99 1f       	adc	r25, r25
    10d4:	66 1f       	adc	r22, r22
    10d6:	06 94       	lsr	r0
    10d8:	a1 f7       	brne	.-24     	; 0x10c2 <__ftoa_engine+0x90>
    10da:	05 90       	lpm	r0, Z+
    10dc:	07 94       	ror	r0
    10de:	28 f4       	brcc	.+10     	; 0x10ea <__ftoa_engine+0xb8>
    10e0:	f8 0e       	add	r15, r24
    10e2:	49 1f       	adc	r20, r25
    10e4:	56 1f       	adc	r21, r22
    10e6:	c7 1f       	adc	r28, r23
    10e8:	d1 1d       	adc	r29, r1
    10ea:	88 0f       	add	r24, r24
    10ec:	99 1f       	adc	r25, r25
    10ee:	66 1f       	adc	r22, r22
    10f0:	77 1f       	adc	r23, r23
    10f2:	06 94       	lsr	r0
    10f4:	a1 f7       	brne	.-24     	; 0x10de <__ftoa_engine+0xac>
    10f6:	05 90       	lpm	r0, Z+
    10f8:	07 94       	ror	r0
    10fa:	20 f4       	brcc	.+8      	; 0x1104 <__ftoa_engine+0xd2>
    10fc:	49 0f       	add	r20, r25
    10fe:	56 1f       	adc	r21, r22
    1100:	c7 1f       	adc	r28, r23
    1102:	d8 1f       	adc	r29, r24
    1104:	99 0f       	add	r25, r25
    1106:	66 1f       	adc	r22, r22
    1108:	77 1f       	adc	r23, r23
    110a:	88 1f       	adc	r24, r24
    110c:	06 94       	lsr	r0
    110e:	a9 f7       	brne	.-22     	; 0x10fa <__ftoa_engine+0xc8>
    1110:	84 91       	lpm	r24, Z
    1112:	10 95       	com	r17
    1114:	17 70       	andi	r17, 0x07	; 7
    1116:	41 f0       	breq	.+16     	; 0x1128 <__ftoa_engine+0xf6>
    1118:	d6 95       	lsr	r29
    111a:	c7 95       	ror	r28
    111c:	57 95       	ror	r21
    111e:	47 95       	ror	r20
    1120:	f7 94       	ror	r15
    1122:	e7 94       	ror	r14
    1124:	1a 95       	dec	r17
    1126:	c1 f7       	brne	.-16     	; 0x1118 <__ftoa_engine+0xe6>
    1128:	e8 e6       	ldi	r30, 0x68	; 104
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	68 94       	set
    112e:	15 90       	lpm	r1, Z+
    1130:	15 91       	lpm	r17, Z+
    1132:	35 91       	lpm	r19, Z+
    1134:	65 91       	lpm	r22, Z+
    1136:	95 91       	lpm	r25, Z+
    1138:	05 90       	lpm	r0, Z+
    113a:	7f e2       	ldi	r23, 0x2F	; 47
    113c:	73 95       	inc	r23
    113e:	e1 18       	sub	r14, r1
    1140:	f1 0a       	sbc	r15, r17
    1142:	43 0b       	sbc	r20, r19
    1144:	56 0b       	sbc	r21, r22
    1146:	c9 0b       	sbc	r28, r25
    1148:	d0 09       	sbc	r29, r0
    114a:	c0 f7       	brcc	.-16     	; 0x113c <__ftoa_engine+0x10a>
    114c:	e1 0c       	add	r14, r1
    114e:	f1 1e       	adc	r15, r17
    1150:	43 1f       	adc	r20, r19
    1152:	56 1f       	adc	r21, r22
    1154:	c9 1f       	adc	r28, r25
    1156:	d0 1d       	adc	r29, r0
    1158:	7e f4       	brtc	.+30     	; 0x1178 <__ftoa_engine+0x146>
    115a:	70 33       	cpi	r23, 0x30	; 48
    115c:	11 f4       	brne	.+4      	; 0x1162 <__ftoa_engine+0x130>
    115e:	8a 95       	dec	r24
    1160:	e6 cf       	rjmp	.-52     	; 0x112e <__ftoa_engine+0xfc>
    1162:	e8 94       	clt
    1164:	01 50       	subi	r16, 0x01	; 1
    1166:	30 f0       	brcs	.+12     	; 0x1174 <__ftoa_engine+0x142>
    1168:	08 0f       	add	r16, r24
    116a:	0a f4       	brpl	.+2      	; 0x116e <__ftoa_engine+0x13c>
    116c:	00 27       	eor	r16, r16
    116e:	02 17       	cp	r16, r18
    1170:	08 f4       	brcc	.+2      	; 0x1174 <__ftoa_engine+0x142>
    1172:	20 2f       	mov	r18, r16
    1174:	23 95       	inc	r18
    1176:	02 2f       	mov	r16, r18
    1178:	7a 33       	cpi	r23, 0x3A	; 58
    117a:	28 f0       	brcs	.+10     	; 0x1186 <__ftoa_engine+0x154>
    117c:	79 e3       	ldi	r23, 0x39	; 57
    117e:	7d 93       	st	X+, r23
    1180:	2a 95       	dec	r18
    1182:	e9 f7       	brne	.-6      	; 0x117e <__ftoa_engine+0x14c>
    1184:	10 c0       	rjmp	.+32     	; 0x11a6 <__ftoa_engine+0x174>
    1186:	7d 93       	st	X+, r23
    1188:	2a 95       	dec	r18
    118a:	89 f6       	brne	.-94     	; 0x112e <__ftoa_engine+0xfc>
    118c:	06 94       	lsr	r0
    118e:	97 95       	ror	r25
    1190:	67 95       	ror	r22
    1192:	37 95       	ror	r19
    1194:	17 95       	ror	r17
    1196:	17 94       	ror	r1
    1198:	e1 18       	sub	r14, r1
    119a:	f1 0a       	sbc	r15, r17
    119c:	43 0b       	sbc	r20, r19
    119e:	56 0b       	sbc	r21, r22
    11a0:	c9 0b       	sbc	r28, r25
    11a2:	d0 09       	sbc	r29, r0
    11a4:	98 f0       	brcs	.+38     	; 0x11cc <__ftoa_engine+0x19a>
    11a6:	23 95       	inc	r18
    11a8:	7e 91       	ld	r23, -X
    11aa:	73 95       	inc	r23
    11ac:	7a 33       	cpi	r23, 0x3A	; 58
    11ae:	08 f0       	brcs	.+2      	; 0x11b2 <__ftoa_engine+0x180>
    11b0:	70 e3       	ldi	r23, 0x30	; 48
    11b2:	7c 93       	st	X, r23
    11b4:	20 13       	cpse	r18, r16
    11b6:	b8 f7       	brcc	.-18     	; 0x11a6 <__ftoa_engine+0x174>
    11b8:	7e 91       	ld	r23, -X
    11ba:	70 61       	ori	r23, 0x10	; 16
    11bc:	7d 93       	st	X+, r23
    11be:	30 f0       	brcs	.+12     	; 0x11cc <__ftoa_engine+0x19a>
    11c0:	83 95       	inc	r24
    11c2:	71 e3       	ldi	r23, 0x31	; 49
    11c4:	7d 93       	st	X+, r23
    11c6:	70 e3       	ldi	r23, 0x30	; 48
    11c8:	2a 95       	dec	r18
    11ca:	e1 f7       	brne	.-8      	; 0x11c4 <__ftoa_engine+0x192>
    11cc:	11 24       	eor	r1, r1
    11ce:	ef 90       	pop	r14
    11d0:	ff 90       	pop	r15
    11d2:	0f 91       	pop	r16
    11d4:	1f 91       	pop	r17
    11d6:	cf 91       	pop	r28
    11d8:	df 91       	pop	r29
    11da:	99 27       	eor	r25, r25
    11dc:	87 fd       	sbrc	r24, 7
    11de:	90 95       	com	r25
    11e0:	08 95       	ret

000011e2 <strnlen_P>:
    11e2:	fc 01       	movw	r30, r24
    11e4:	05 90       	lpm	r0, Z+
    11e6:	61 50       	subi	r22, 0x01	; 1
    11e8:	70 40       	sbci	r23, 0x00	; 0
    11ea:	01 10       	cpse	r0, r1
    11ec:	d8 f7       	brcc	.-10     	; 0x11e4 <strnlen_P+0x2>
    11ee:	80 95       	com	r24
    11f0:	90 95       	com	r25
    11f2:	8e 0f       	add	r24, r30
    11f4:	9f 1f       	adc	r25, r31
    11f6:	08 95       	ret

000011f8 <strnlen>:
    11f8:	fc 01       	movw	r30, r24
    11fa:	61 50       	subi	r22, 0x01	; 1
    11fc:	70 40       	sbci	r23, 0x00	; 0
    11fe:	01 90       	ld	r0, Z+
    1200:	01 10       	cpse	r0, r1
    1202:	d8 f7       	brcc	.-10     	; 0x11fa <strnlen+0x2>
    1204:	80 95       	com	r24
    1206:	90 95       	com	r25
    1208:	8e 0f       	add	r24, r30
    120a:	9f 1f       	adc	r25, r31
    120c:	08 95       	ret

0000120e <fputc>:
    120e:	0f 93       	push	r16
    1210:	1f 93       	push	r17
    1212:	cf 93       	push	r28
    1214:	df 93       	push	r29
    1216:	fb 01       	movw	r30, r22
    1218:	23 81       	ldd	r18, Z+3	; 0x03
    121a:	21 fd       	sbrc	r18, 1
    121c:	03 c0       	rjmp	.+6      	; 0x1224 <fputc+0x16>
    121e:	8f ef       	ldi	r24, 0xFF	; 255
    1220:	9f ef       	ldi	r25, 0xFF	; 255
    1222:	2c c0       	rjmp	.+88     	; 0x127c <fputc+0x6e>
    1224:	22 ff       	sbrs	r18, 2
    1226:	16 c0       	rjmp	.+44     	; 0x1254 <fputc+0x46>
    1228:	46 81       	ldd	r20, Z+6	; 0x06
    122a:	57 81       	ldd	r21, Z+7	; 0x07
    122c:	24 81       	ldd	r18, Z+4	; 0x04
    122e:	35 81       	ldd	r19, Z+5	; 0x05
    1230:	42 17       	cp	r20, r18
    1232:	53 07       	cpc	r21, r19
    1234:	44 f4       	brge	.+16     	; 0x1246 <fputc+0x38>
    1236:	a0 81       	ld	r26, Z
    1238:	b1 81       	ldd	r27, Z+1	; 0x01
    123a:	9d 01       	movw	r18, r26
    123c:	2f 5f       	subi	r18, 0xFF	; 255
    123e:	3f 4f       	sbci	r19, 0xFF	; 255
    1240:	31 83       	std	Z+1, r19	; 0x01
    1242:	20 83       	st	Z, r18
    1244:	8c 93       	st	X, r24
    1246:	26 81       	ldd	r18, Z+6	; 0x06
    1248:	37 81       	ldd	r19, Z+7	; 0x07
    124a:	2f 5f       	subi	r18, 0xFF	; 255
    124c:	3f 4f       	sbci	r19, 0xFF	; 255
    124e:	37 83       	std	Z+7, r19	; 0x07
    1250:	26 83       	std	Z+6, r18	; 0x06
    1252:	14 c0       	rjmp	.+40     	; 0x127c <fputc+0x6e>
    1254:	8b 01       	movw	r16, r22
    1256:	ec 01       	movw	r28, r24
    1258:	fb 01       	movw	r30, r22
    125a:	00 84       	ldd	r0, Z+8	; 0x08
    125c:	f1 85       	ldd	r31, Z+9	; 0x09
    125e:	e0 2d       	mov	r30, r0
    1260:	09 95       	icall
    1262:	89 2b       	or	r24, r25
    1264:	e1 f6       	brne	.-72     	; 0x121e <fputc+0x10>
    1266:	d8 01       	movw	r26, r16
    1268:	16 96       	adiw	r26, 0x06	; 6
    126a:	8d 91       	ld	r24, X+
    126c:	9c 91       	ld	r25, X
    126e:	17 97       	sbiw	r26, 0x07	; 7
    1270:	01 96       	adiw	r24, 0x01	; 1
    1272:	17 96       	adiw	r26, 0x07	; 7
    1274:	9c 93       	st	X, r25
    1276:	8e 93       	st	-X, r24
    1278:	16 97       	sbiw	r26, 0x06	; 6
    127a:	ce 01       	movw	r24, r28
    127c:	df 91       	pop	r29
    127e:	cf 91       	pop	r28
    1280:	1f 91       	pop	r17
    1282:	0f 91       	pop	r16
    1284:	08 95       	ret

00001286 <__ultoa_invert>:
    1286:	fa 01       	movw	r30, r20
    1288:	aa 27       	eor	r26, r26
    128a:	28 30       	cpi	r18, 0x08	; 8
    128c:	51 f1       	breq	.+84     	; 0x12e2 <__ultoa_invert+0x5c>
    128e:	20 31       	cpi	r18, 0x10	; 16
    1290:	81 f1       	breq	.+96     	; 0x12f2 <__ultoa_invert+0x6c>
    1292:	e8 94       	clt
    1294:	6f 93       	push	r22
    1296:	6e 7f       	andi	r22, 0xFE	; 254
    1298:	6e 5f       	subi	r22, 0xFE	; 254
    129a:	7f 4f       	sbci	r23, 0xFF	; 255
    129c:	8f 4f       	sbci	r24, 0xFF	; 255
    129e:	9f 4f       	sbci	r25, 0xFF	; 255
    12a0:	af 4f       	sbci	r26, 0xFF	; 255
    12a2:	b1 e0       	ldi	r27, 0x01	; 1
    12a4:	3e d0       	rcall	.+124    	; 0x1322 <__ultoa_invert+0x9c>
    12a6:	b4 e0       	ldi	r27, 0x04	; 4
    12a8:	3c d0       	rcall	.+120    	; 0x1322 <__ultoa_invert+0x9c>
    12aa:	67 0f       	add	r22, r23
    12ac:	78 1f       	adc	r23, r24
    12ae:	89 1f       	adc	r24, r25
    12b0:	9a 1f       	adc	r25, r26
    12b2:	a1 1d       	adc	r26, r1
    12b4:	68 0f       	add	r22, r24
    12b6:	79 1f       	adc	r23, r25
    12b8:	8a 1f       	adc	r24, r26
    12ba:	91 1d       	adc	r25, r1
    12bc:	a1 1d       	adc	r26, r1
    12be:	6a 0f       	add	r22, r26
    12c0:	71 1d       	adc	r23, r1
    12c2:	81 1d       	adc	r24, r1
    12c4:	91 1d       	adc	r25, r1
    12c6:	a1 1d       	adc	r26, r1
    12c8:	20 d0       	rcall	.+64     	; 0x130a <__ultoa_invert+0x84>
    12ca:	09 f4       	brne	.+2      	; 0x12ce <__ultoa_invert+0x48>
    12cc:	68 94       	set
    12ce:	3f 91       	pop	r19
    12d0:	2a e0       	ldi	r18, 0x0A	; 10
    12d2:	26 9f       	mul	r18, r22
    12d4:	11 24       	eor	r1, r1
    12d6:	30 19       	sub	r19, r0
    12d8:	30 5d       	subi	r19, 0xD0	; 208
    12da:	31 93       	st	Z+, r19
    12dc:	de f6       	brtc	.-74     	; 0x1294 <__ultoa_invert+0xe>
    12de:	cf 01       	movw	r24, r30
    12e0:	08 95       	ret
    12e2:	46 2f       	mov	r20, r22
    12e4:	47 70       	andi	r20, 0x07	; 7
    12e6:	40 5d       	subi	r20, 0xD0	; 208
    12e8:	41 93       	st	Z+, r20
    12ea:	b3 e0       	ldi	r27, 0x03	; 3
    12ec:	0f d0       	rcall	.+30     	; 0x130c <__ultoa_invert+0x86>
    12ee:	c9 f7       	brne	.-14     	; 0x12e2 <__ultoa_invert+0x5c>
    12f0:	f6 cf       	rjmp	.-20     	; 0x12de <__ultoa_invert+0x58>
    12f2:	46 2f       	mov	r20, r22
    12f4:	4f 70       	andi	r20, 0x0F	; 15
    12f6:	40 5d       	subi	r20, 0xD0	; 208
    12f8:	4a 33       	cpi	r20, 0x3A	; 58
    12fa:	18 f0       	brcs	.+6      	; 0x1302 <__ultoa_invert+0x7c>
    12fc:	49 5d       	subi	r20, 0xD9	; 217
    12fe:	31 fd       	sbrc	r19, 1
    1300:	40 52       	subi	r20, 0x20	; 32
    1302:	41 93       	st	Z+, r20
    1304:	02 d0       	rcall	.+4      	; 0x130a <__ultoa_invert+0x84>
    1306:	a9 f7       	brne	.-22     	; 0x12f2 <__ultoa_invert+0x6c>
    1308:	ea cf       	rjmp	.-44     	; 0x12de <__ultoa_invert+0x58>
    130a:	b4 e0       	ldi	r27, 0x04	; 4
    130c:	a6 95       	lsr	r26
    130e:	97 95       	ror	r25
    1310:	87 95       	ror	r24
    1312:	77 95       	ror	r23
    1314:	67 95       	ror	r22
    1316:	ba 95       	dec	r27
    1318:	c9 f7       	brne	.-14     	; 0x130c <__ultoa_invert+0x86>
    131a:	00 97       	sbiw	r24, 0x00	; 0
    131c:	61 05       	cpc	r22, r1
    131e:	71 05       	cpc	r23, r1
    1320:	08 95       	ret
    1322:	9b 01       	movw	r18, r22
    1324:	ac 01       	movw	r20, r24
    1326:	0a 2e       	mov	r0, r26
    1328:	06 94       	lsr	r0
    132a:	57 95       	ror	r21
    132c:	47 95       	ror	r20
    132e:	37 95       	ror	r19
    1330:	27 95       	ror	r18
    1332:	ba 95       	dec	r27
    1334:	c9 f7       	brne	.-14     	; 0x1328 <__ultoa_invert+0xa2>
    1336:	62 0f       	add	r22, r18
    1338:	73 1f       	adc	r23, r19
    133a:	84 1f       	adc	r24, r20
    133c:	95 1f       	adc	r25, r21
    133e:	a0 1d       	adc	r26, r0
    1340:	08 95       	ret

00001342 <__prologue_saves__>:
    1342:	2f 92       	push	r2
    1344:	3f 92       	push	r3
    1346:	4f 92       	push	r4
    1348:	5f 92       	push	r5
    134a:	6f 92       	push	r6
    134c:	7f 92       	push	r7
    134e:	8f 92       	push	r8
    1350:	9f 92       	push	r9
    1352:	af 92       	push	r10
    1354:	bf 92       	push	r11
    1356:	cf 92       	push	r12
    1358:	df 92       	push	r13
    135a:	ef 92       	push	r14
    135c:	ff 92       	push	r15
    135e:	0f 93       	push	r16
    1360:	1f 93       	push	r17
    1362:	cf 93       	push	r28
    1364:	df 93       	push	r29
    1366:	cd b7       	in	r28, 0x3d	; 61
    1368:	de b7       	in	r29, 0x3e	; 62
    136a:	ca 1b       	sub	r28, r26
    136c:	db 0b       	sbc	r29, r27
    136e:	0f b6       	in	r0, 0x3f	; 63
    1370:	f8 94       	cli
    1372:	de bf       	out	0x3e, r29	; 62
    1374:	0f be       	out	0x3f, r0	; 63
    1376:	cd bf       	out	0x3d, r28	; 61
    1378:	09 94       	ijmp

0000137a <__epilogue_restores__>:
    137a:	2a 88       	ldd	r2, Y+18	; 0x12
    137c:	39 88       	ldd	r3, Y+17	; 0x11
    137e:	48 88       	ldd	r4, Y+16	; 0x10
    1380:	5f 84       	ldd	r5, Y+15	; 0x0f
    1382:	6e 84       	ldd	r6, Y+14	; 0x0e
    1384:	7d 84       	ldd	r7, Y+13	; 0x0d
    1386:	8c 84       	ldd	r8, Y+12	; 0x0c
    1388:	9b 84       	ldd	r9, Y+11	; 0x0b
    138a:	aa 84       	ldd	r10, Y+10	; 0x0a
    138c:	b9 84       	ldd	r11, Y+9	; 0x09
    138e:	c8 84       	ldd	r12, Y+8	; 0x08
    1390:	df 80       	ldd	r13, Y+7	; 0x07
    1392:	ee 80       	ldd	r14, Y+6	; 0x06
    1394:	fd 80       	ldd	r15, Y+5	; 0x05
    1396:	0c 81       	ldd	r16, Y+4	; 0x04
    1398:	1b 81       	ldd	r17, Y+3	; 0x03
    139a:	aa 81       	ldd	r26, Y+2	; 0x02
    139c:	b9 81       	ldd	r27, Y+1	; 0x01
    139e:	ce 0f       	add	r28, r30
    13a0:	d1 1d       	adc	r29, r1
    13a2:	0f b6       	in	r0, 0x3f	; 63
    13a4:	f8 94       	cli
    13a6:	de bf       	out	0x3e, r29	; 62
    13a8:	0f be       	out	0x3f, r0	; 63
    13aa:	cd bf       	out	0x3d, r28	; 61
    13ac:	ed 01       	movw	r28, r26
    13ae:	08 95       	ret

000013b0 <_exit>:
    13b0:	f8 94       	cli

000013b2 <__stop_program>:
    13b2:	ff cf       	rjmp	.-2      	; 0x13b2 <__stop_program>
